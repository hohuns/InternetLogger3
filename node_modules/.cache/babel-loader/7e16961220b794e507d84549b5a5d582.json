{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"children\", \"component\", \"components\", \"componentsProps\", \"disabled\", \"value\", \"label\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport composeClasses from '../composeClasses';\nimport { SelectUnstyledContext } from '../SelectUnstyled/SelectUnstyledContext';\nimport { getOptionUnstyledUtilityClass } from './optionUnstyledClasses';\nimport { useSlotProps } from '../utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction useUtilityClasses(ownerState) {\n  var disabled = ownerState.disabled,\n      highlighted = ownerState.highlighted,\n      selected = ownerState.selected;\n  var slots = {\n    root: ['root', disabled && 'disabled', highlighted && 'highlighted', selected && 'selected']\n  };\n  return composeClasses(slots, getOptionUnstyledUtilityClass, {});\n}\n/**\n * An unstyled option to be used within a SelectUnstyled.\n */\n\n\nvar OptionUnstyled = /*#__PURE__*/React.forwardRef(function OptionUnstyled(props, ref) {\n  var children = props.children,\n      component = props.component,\n      _props$components = props.components,\n      components = _props$components === void 0 ? {} : _props$components,\n      _props$componentsProp = props.componentsProps,\n      componentsProps = _props$componentsProp === void 0 ? {} : _props$componentsProp,\n      disabled = props.disabled,\n      value = props.value,\n      label = props.label,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var selectContext = React.useContext(SelectUnstyledContext);\n\n  if (!selectContext) {\n    throw new Error('OptionUnstyled must be used within a SelectUnstyled');\n  }\n\n  var Root = component || components.Root || 'li';\n  var selectOption = {\n    value: value,\n    label: label || children,\n    disabled: disabled\n  };\n  var optionState = selectContext.getOptionState(selectOption);\n  var optionProps = selectContext.getOptionProps(selectOption);\n  var listboxRef = selectContext.listboxRef;\n\n  var ownerState = _extends({}, props, optionState);\n\n  var optionRef = React.useRef(null);\n  var handleRef = useForkRef(ref, optionRef);\n  React.useEffect(function () {\n    // Scroll to the currently highlighted option\n    if (optionState.highlighted) {\n      if (!listboxRef.current || !optionRef.current) {\n        return;\n      }\n\n      var listboxClientRect = listboxRef.current.getBoundingClientRect();\n      var optionClientRect = optionRef.current.getBoundingClientRect();\n\n      if (optionClientRect.top < listboxClientRect.top) {\n        listboxRef.current.scrollTop -= listboxClientRect.top - optionClientRect.top;\n      } else if (optionClientRect.bottom > listboxClientRect.bottom) {\n        listboxRef.current.scrollTop += optionClientRect.bottom - listboxClientRect.bottom;\n      }\n    }\n  }, [optionState.highlighted, listboxRef]);\n  var classes = useUtilityClasses(ownerState);\n  var rootProps = useSlotProps({\n    elementType: Root,\n    externalSlotProps: componentsProps.root,\n    externalForwardedProps: other,\n    additionalProps: _extends({}, optionProps, {\n      ref: handleRef\n    }),\n    className: classes.root,\n    ownerState: ownerState\n  });\n  return /*#__PURE__*/_jsx(Root, _extends({}, rootProps, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? OptionUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the OptionUnstyled.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the OptionUnstyled.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * If `true`, the option will be disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * A text representation of the option's content.\n   * Used for keyboard text navigation matching.\n   */\n  label: PropTypes.string,\n\n  /**\n   * The value of the option.\n   */\n  value: PropTypes.any.isRequired\n} : void 0;\n/**\n * An unstyled option to be used within a SelectUnstyled.\n *\n * Demos:\n *\n * - [Select](https://mui.com/base/react-select/)\n *\n * API:\n *\n * - [OptionUnstyled API](https://mui.com/base/api/option-unstyled/)\n */\n\nexport default /*#__PURE__*/React.memo(OptionUnstyled);","map":{"version":3,"sources":["/Users/sungjaejoo/Desktop/리액트/인터로거/깃허브/ILP-main/node_modules/@mui/base/OptionUnstyled/OptionUnstyled.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","unstable_useForkRef","useForkRef","composeClasses","SelectUnstyledContext","getOptionUnstyledUtilityClass","useSlotProps","jsx","_jsx","useUtilityClasses","ownerState","disabled","highlighted","selected","slots","root","OptionUnstyled","forwardRef","props","ref","children","component","components","componentsProps","value","label","other","selectContext","useContext","Error","Root","selectOption","optionState","getOptionState","optionProps","getOptionProps","listboxRef","optionRef","useRef","handleRef","useEffect","current","listboxClientRect","getBoundingClientRect","optionClientRect","top","scrollTop","bottom","classes","rootProps","elementType","externalSlotProps","externalForwardedProps","additionalProps","className","process","env","NODE_ENV","propTypes","node","shape","oneOfType","func","object","bool","string","any","isRequired","memo"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"component\", \"components\", \"componentsProps\", \"disabled\", \"value\", \"label\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport composeClasses from '../composeClasses';\nimport { SelectUnstyledContext } from '../SelectUnstyled/SelectUnstyledContext';\nimport { getOptionUnstyledUtilityClass } from './optionUnstyledClasses';\nimport { useSlotProps } from '../utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction useUtilityClasses(ownerState) {\n  const {\n    disabled,\n    highlighted,\n    selected\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', highlighted && 'highlighted', selected && 'selected']\n  };\n  return composeClasses(slots, getOptionUnstyledUtilityClass, {});\n}\n/**\n * An unstyled option to be used within a SelectUnstyled.\n */\n\n\nconst OptionUnstyled = /*#__PURE__*/React.forwardRef(function OptionUnstyled(props, ref) {\n  const {\n    children,\n    component,\n    components = {},\n    componentsProps = {},\n    disabled,\n    value,\n    label\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const selectContext = React.useContext(SelectUnstyledContext);\n\n  if (!selectContext) {\n    throw new Error('OptionUnstyled must be used within a SelectUnstyled');\n  }\n\n  const Root = component || components.Root || 'li';\n  const selectOption = {\n    value,\n    label: label || children,\n    disabled\n  };\n  const optionState = selectContext.getOptionState(selectOption);\n  const optionProps = selectContext.getOptionProps(selectOption);\n  const listboxRef = selectContext.listboxRef;\n\n  const ownerState = _extends({}, props, optionState);\n\n  const optionRef = React.useRef(null);\n  const handleRef = useForkRef(ref, optionRef);\n  React.useEffect(() => {\n    // Scroll to the currently highlighted option\n    if (optionState.highlighted) {\n      if (!listboxRef.current || !optionRef.current) {\n        return;\n      }\n\n      const listboxClientRect = listboxRef.current.getBoundingClientRect();\n      const optionClientRect = optionRef.current.getBoundingClientRect();\n\n      if (optionClientRect.top < listboxClientRect.top) {\n        listboxRef.current.scrollTop -= listboxClientRect.top - optionClientRect.top;\n      } else if (optionClientRect.bottom > listboxClientRect.bottom) {\n        listboxRef.current.scrollTop += optionClientRect.bottom - listboxClientRect.bottom;\n      }\n    }\n  }, [optionState.highlighted, listboxRef]);\n  const classes = useUtilityClasses(ownerState);\n  const rootProps = useSlotProps({\n    elementType: Root,\n    externalSlotProps: componentsProps.root,\n    externalForwardedProps: other,\n    additionalProps: _extends({}, optionProps, {\n      ref: handleRef\n    }),\n    className: classes.root,\n    ownerState\n  });\n  return /*#__PURE__*/_jsx(Root, _extends({}, rootProps, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? OptionUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the OptionUnstyled.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the OptionUnstyled.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * If `true`, the option will be disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * A text representation of the option's content.\n   * Used for keyboard text navigation matching.\n   */\n  label: PropTypes.string,\n\n  /**\n   * The value of the option.\n   */\n  value: PropTypes.any.isRequired\n} : void 0;\n/**\n * An unstyled option to be used within a SelectUnstyled.\n *\n * Demos:\n *\n * - [Select](https://mui.com/base/react-select/)\n *\n * API:\n *\n * - [OptionUnstyled API](https://mui.com/base/api/option-unstyled/)\n */\n\nexport default /*#__PURE__*/React.memo(OptionUnstyled);"]},"metadata":{},"sourceType":"module"}