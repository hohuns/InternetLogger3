{"ast":null,"code":"var _jsxFileName = \"/Users/sungjaejoo/Desktop/\\u1105\\u1175\\u110B\\u1162\\u11A8\\u1110\\u1173/\\u110B\\u1175\\u11AB\\u1110\\u1165\\u1105\\u1169\\u1100\\u1165/\\u1100\\u1175\\u11BA\\u1112\\u1165\\u1107\\u1173/ILP-main/src/components/ChangePasswordForm/ChangePasswordForm.tsx\";\nimport { Divider } from \"@mui/material\";\nimport { TextField } from \"@mui/material\";\nimport { Grid } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport React, { useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { usersActions } from \"../../store/userSlice\";\nimport { useAppSelector, useAppDispatch } from \"../../store/hooks\";\nimport { useTranslation } from \"react-i18next\";\n\nconst ChangePasswordForm = () => {\n  const pwRef = useRef(null);\n  let navigate = useNavigate();\n  const reduxidToken = useAppSelector(state => state.idToken);\n  const reduxLan = useAppSelector(state => state.lan);\n  const {\n    t\n  } = useTranslation(\"main\");\n  const dispatch = useAppDispatch();\n\n  const logoutHandler = () => {\n    dispatch(usersActions.updateIdToken(\"\"));\n    dispatch(usersActions.updateIsLoggedIn(false));\n    dispatch(usersActions.updateUser(\"\"));\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"isLoggedIn\");\n    localStorage.removeItem(\"user\");\n    navigate(\"/login\");\n  };\n\n  const formHandler = async () => {\n    var _pwRef$current;\n\n    console.log((_pwRef$current = pwRef.current) === null || _pwRef$current === void 0 ? void 0 : _pwRef$current.value);\n\n    try {\n      var _pwRef$current2;\n\n      const data = await fetch(\"https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyCkLePHqkPxNxPalsSLE_C4CbAaOiaGwNw\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          idToken: reduxidToken,\n          password: (_pwRef$current2 = pwRef.current) === null || _pwRef$current2 === void 0 ? void 0 : _pwRef$current2.value,\n          returnSecureToken: false\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n\n      if (!data.ok) {\n        console.log(data);\n        let errorMessage = t(\"ChangePasswordForm.formHandler-alert\");\n        throw new Error(errorMessage);\n      }\n\n      const json = await data.json();\n      console.log(json);\n      alert(t(\"ChangePasswordForm.formHandler-alert2\"));\n      logoutHandler();\n    } catch (err) {\n      alert(err);\n    }\n  };\n\n  console.log(reduxidToken);\n  return /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, t(\"ChangePasswordForm.formHandler-header\")), /*#__PURE__*/React.createElement(Divider, {\n    sx: {\n      backgroundColor: \"white\",\n      marginTop: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    style: {\n      marginTop: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    margin: \"dense\",\n    required: true,\n    name: \"pw\",\n    sx: {\n      input: {\n        borderRadius: \"5px\",\n        border: \"1px solid white\",\n        color: \"white\"\n      }\n    },\n    label: t(\"Loginform.input-pd\"),\n    type: \"password\",\n    fullWidth: true,\n    inputRef: pwRef,\n    InputLabelProps: {\n      style: {\n        color: \"#fff\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      marginTop: \"30px\"\n    },\n    onClick: formHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, t(\"SignInForm.button-submit\")))));\n};\n\nexport default ChangePasswordForm;","map":{"version":3,"sources":["/Users/sungjaejoo/Desktop/리액트/인터로거/깃허브/ILP-main/src/components/ChangePasswordForm/ChangePasswordForm.tsx"],"names":["Divider","TextField","Grid","Typography","React","useRef","useNavigate","usersActions","useAppSelector","useAppDispatch","useTranslation","ChangePasswordForm","pwRef","navigate","reduxidToken","state","idToken","reduxLan","lan","t","dispatch","logoutHandler","updateIdToken","updateIsLoggedIn","updateUser","localStorage","removeItem","formHandler","console","log","current","value","data","fetch","method","body","JSON","stringify","password","returnSecureToken","headers","ok","errorMessage","Error","json","alert","err","backgroundColor","marginTop","input","borderRadius","border","color","style"],"mappings":"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","sourcesContent":["import { Divider } from \"@mui/material\";\nimport { TextField } from \"@mui/material\";\nimport { Grid } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport React, { useRef } from \"react\";\nimport { logIn } from \"../../Service/ApiService\";\nimport { useNavigate } from \"react-router-dom\";\nimport { usersActions } from \"../../store/userSlice\";\nimport { useAppSelector, useAppDispatch } from \"../../store/hooks\";\nimport { useTranslation } from \"react-i18next\";\n\nconst ChangePasswordForm = () => {\n  const pwRef = useRef<HTMLInputElement>(null);\n  let navigate = useNavigate();\n  const reduxidToken: string = useAppSelector((state) => state.idToken);\n  const reduxLan: string = useAppSelector((state) => state.lan);\n  const { t } = useTranslation(\"main\");\n  const dispatch = useAppDispatch();\n\n  const logoutHandler = () => {\n    dispatch(usersActions.updateIdToken(\"\"));\n    dispatch(usersActions.updateIsLoggedIn(false));\n    dispatch(usersActions.updateUser(\"\"));\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"isLoggedIn\");\n    localStorage.removeItem(\"user\");\n    navigate(\"/login\");\n  };\n\n  const formHandler = async () => {\n    console.log(pwRef.current?.value);\n    try {\n      const data = await fetch(\n        \"https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyCkLePHqkPxNxPalsSLE_C4CbAaOiaGwNw\",\n        {\n          method: \"POST\",\n          body: JSON.stringify({\n            idToken: reduxidToken,\n            password: pwRef.current?.value,\n            returnSecureToken: false,\n          }),\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n      if (!data.ok) {\n        console.log(data);\n        let errorMessage = t(\"ChangePasswordForm.formHandler-alert\");\n        throw new Error(errorMessage);\n      }\n\n      const json = await data.json();\n      console.log(json);\n      alert(t(\"ChangePasswordForm.formHandler-alert2\"));\n      logoutHandler();\n    } catch (err) {\n      alert(err);\n    }\n  };\n\n  console.log(reduxidToken);\n  return (\n    <section>\n      <Typography variant=\"h6\" color=\"white\">\n        {t(\"ChangePasswordForm.formHandler-header\")}\n      </Typography>\n      <Divider sx={{ backgroundColor: \"white\", marginTop: \"10px\" }} />\n      <Grid container spacing={4} style={{ marginTop: \"10px\" }}>\n        <Grid item xs={12} sm={3}>\n          {}\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            margin=\"dense\"\n            required\n            name=\"pw\"\n            sx={{\n              input: {\n                borderRadius: \"5px\",\n                border: \"1px solid white\",\n                color: \"white\",\n              },\n            }}\n            label={t(\"Loginform.input-pd\")}\n            type=\"password\"\n            fullWidth\n            inputRef={pwRef}\n            InputLabelProps={{\n              style: { color: \"#fff\" },\n            }}\n          />\n          <button style={{ marginTop: \"30px\" }} onClick={formHandler}>\n            {t(\"SignInForm.button-submit\")}\n          </button>\n        </Grid>\n      </Grid>\n    </section>\n  );\n};\n\nexport default ChangePasswordForm;\n"]},"metadata":{},"sourceType":"module"}