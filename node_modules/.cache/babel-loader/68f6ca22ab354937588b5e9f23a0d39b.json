{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initialState = {\n  user: \"\",\n  idToken: \"\",\n  isLoggedIn: false,\n  lan: \"\"\n};\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: initialState,\n  reducers: {\n    updateUser(state, action) {\n      state.user = action.payload;\n    },\n\n    updateIdToken(state, action) {\n      state.idToken = action.payload;\n    },\n\n    updateIsLoggedIn(state, action) {\n      state.isLoggedIn = action.payload;\n    },\n\n    updateLanguage(state, action) {\n      state.lan = action.payload;\n    }\n\n  }\n}); //Create the store\n\nconst store = configureStore({\n  reducer: userSlice.reducer\n});\nexport const usersActions = userSlice.actions;\nexport default store;","map":{"version":3,"sources":["/Users/sungjaejoo/Desktop/리액트/인터로거/깃허브/ILP-main/src/store/userSlice.ts"],"names":["createSlice","configureStore","initialState","user","idToken","isLoggedIn","lan","userSlice","name","reducers","updateUser","state","action","payload","updateIdToken","updateIsLoggedIn","updateLanguage","store","reducer","usersActions","actions"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,cAAtB,QAA2D,kBAA3D;AASA,MAAMC,YAA0B,GAAG;AACjCC,EAAAA,IAAI,EAAE,EAD2B;AAEjCC,EAAAA,OAAO,EAAE,EAFwB;AAGjCC,EAAAA,UAAU,EAAE,KAHqB;AAIjCC,EAAAA,GAAG,EAAE;AAJ4B,CAAnC;AAOA,MAAMC,SAAS,GAAGP,WAAW,CAAC;AAC5BQ,EAAAA,IAAI,EAAE,MADsB;AAE5BN,EAAAA,YAAY,EAAEA,YAFc;AAG5BO,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,CAACC,KAAD,EAAQC,MAAR,EAAuC;AAC/CD,MAAAA,KAAK,CAACR,IAAN,GAAaS,MAAM,CAACC,OAApB;AACD,KAHO;;AAIRC,IAAAA,aAAa,CAACH,KAAD,EAAQC,MAAR,EAAuC;AAClDD,MAAAA,KAAK,CAACP,OAAN,GAAgBQ,MAAM,CAACC,OAAvB;AACD,KANO;;AAORE,IAAAA,gBAAgB,CAACJ,KAAD,EAAQC,MAAR,EAAwC;AACtDD,MAAAA,KAAK,CAACN,UAAN,GAAmBO,MAAM,CAACC,OAA1B;AACD,KATO;;AAURG,IAAAA,cAAc,CAACL,KAAD,EAAQC,MAAR,EAAuC;AACnDD,MAAAA,KAAK,CAACL,GAAN,GAAYM,MAAM,CAACC,OAAnB;AACD;;AAZO;AAHkB,CAAD,CAA7B,C,CAmBA;;AACA,MAAMI,KAAK,GAAGhB,cAAc,CAAC;AAC3BiB,EAAAA,OAAO,EAAEX,SAAS,CAACW;AADQ,CAAD,CAA5B;AAIA,OAAO,MAAMC,YAAY,GAAGZ,SAAS,CAACa,OAA/B;AACP,eAAeH,KAAf","sourcesContent":["import { createSlice, configureStore, PayloadAction } from \"@reduxjs/toolkit\";\n\ntype initialState = {\n  user: string;\n  idToken: string;\n  isLoggedIn: boolean;\n  lan: string;\n};\n\nconst initialState: initialState = {\n  user: \"\",\n  idToken: \"\",\n  isLoggedIn: false,\n  lan: \"\",\n};\n\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: initialState,\n  reducers: {\n    updateUser(state, action: PayloadAction<string>) {\n      state.user = action.payload;\n    },\n    updateIdToken(state, action: PayloadAction<string>) {\n      state.idToken = action.payload;\n    },\n    updateIsLoggedIn(state, action: PayloadAction<boolean>) {\n      state.isLoggedIn = action.payload;\n    },\n    updateLanguage(state, action: PayloadAction<string>) {\n      state.lan = action.payload;\n    },\n  },\n});\n\n//Create the store\nconst store = configureStore({\n  reducer: userSlice.reducer,\n});\n\nexport const usersActions = userSlice.actions;\nexport default store;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n"]},"metadata":{},"sourceType":"module"}