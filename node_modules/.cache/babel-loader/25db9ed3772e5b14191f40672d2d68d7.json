{"ast":null,"code":"import React,{useRef}from\"react\";import{useAppSelector}from\"../../store/hooks\";import{useTranslation}from\"react-i18next\";import\"./AddNote.css\";function AddNoteEn(props){var titleRef=useRef(null);var textRef=useRef(null);var now=new Date();var reduxUserInfo=useAppSelector(function(state){return state.user;});var _useTranslation=useTranslation(\"main\"),t=_useTranslation.t;function submitHandler(event){var _titleRef$current,_textRef$current;if(((_titleRef$current=titleRef.current)===null||_titleRef$current===void 0?void 0:_titleRef$current.value)&&((_textRef$current=textRef.current)===null||_textRef$current===void 0?void 0:_textRef$current.value)){var _titleRef$current2,_textRef$current2;event.preventDefault();var _notes={title:(_titleRef$current2=titleRef.current)===null||_titleRef$current2===void 0?void 0:_titleRef$current2.value,text:(_textRef$current2=textRef.current)===null||_textRef$current2===void 0?void 0:_textRef$current2.value,date:now.toLocaleString(),logger:reduxUserInfo};props.AddNote(_notes);props.setIsbuttonPressed(false);titleRef.current.value=\"\";textRef.current.value=\"\";}else{alert(t(\"AddNoteEn.error\"));}}return/*#__PURE__*/React.createElement(\"form\",{onSubmit:submitHandler},/*#__PURE__*/React.createElement(\"div\",{className:\"control\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"title\"},\"Title\"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",id:\"title\",ref:titleRef,style:{color:\"white\"},placeholder:t(\"AddNoteEn.titlePlaceHolder\")})),/*#__PURE__*/React.createElement(\"div\",{className:\"control\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"text-log\"},\"Text Log\"),/*#__PURE__*/React.createElement(\"textarea\",{rows:5,id:\"text-log\",ref:textRef,style:{color:\"white\"},placeholder:t(\"AddNoteEn.bodyPlaceHolder\")})),/*#__PURE__*/React.createElement(\"button\",null,t(\"SignInForm.button-submit\")));}export default AddNoteEn;","map":{"version":3,"sources":["/Users/sungjaejoo/Desktop/리액트/인터로거/깃허브/ILP-main/src/components/MessageLogForm/AddNoteEn.tsx"],"names":["React","useRef","useAppSelector","useTranslation","AddNoteEn","props","titleRef","textRef","now","Date","reduxUserInfo","state","user","t","submitHandler","event","current","value","preventDefault","notes","title","text","date","toLocaleString","logger","AddNote","setIsbuttonPressed","alert","color"],"mappings":"AACA,MAAOA,CAAAA,KAAP,EAAgBC,MAAhB,KAA8B,OAA9B,CACA,OAASC,cAAT,KAA+C,mBAA/C,CACA,OAASC,cAAT,KAA+B,eAA/B,CACA,MAAO,eAAP,CAeA,QAASC,CAAAA,SAAT,CAAmBC,KAAnB,CAA0C,CACxC,GAAMC,CAAAA,QAAQ,CAAGL,MAAM,CAAmB,IAAnB,CAAvB,CACA,GAAMM,CAAAA,OAAO,CAAGN,MAAM,CAAsB,IAAtB,CAAtB,CACA,GAAMO,CAAAA,GAAG,CAAG,GAAIC,CAAAA,IAAJ,EAAZ,CACA,GAAMC,CAAAA,aAAa,CAAGR,cAAc,CAAC,SAACS,KAAD,QAAWA,CAAAA,KAAK,CAACC,IAAjB,EAAD,CAApC,CACA,oBAAcT,cAAc,CAAC,MAAD,CAA5B,CAAQU,CAAR,iBAAQA,CAAR,CAEA,QAASC,CAAAA,aAAT,CAAuBC,KAAvB,CAA+C,wCAC7C,GAAI,oBAAAT,QAAQ,CAACU,OAAT,8DAAkBC,KAAlB,sBAA2BV,OAAO,CAACS,OAAnC,2CAA2B,iBAAiBC,KAA5C,CAAJ,CAAuD,0CACrDF,KAAK,CAACG,cAAN,GACA,GAAMC,CAAAA,MAAK,CAAG,CACZC,KAAK,qBAAEd,QAAQ,CAACU,OAAX,6CAAE,mBAAkBC,KADb,CAEZI,IAAI,oBAAEd,OAAO,CAACS,OAAV,4CAAE,kBAAiBC,KAFX,CAGZK,IAAI,CAAEd,GAAG,CAACe,cAAJ,EAHM,CAIZC,MAAM,CAAEd,aAJI,CAAd,CAOAL,KAAK,CAACoB,OAAN,CAAcN,MAAd,EACAd,KAAK,CAACqB,kBAAN,CAAyB,KAAzB,EACApB,QAAQ,CAACU,OAAT,CAAkBC,KAAlB,CAA0B,EAA1B,CACAV,OAAO,CAACS,OAAR,CAAiBC,KAAjB,CAAyB,EAAzB,CACD,CAbD,IAaO,CACLU,KAAK,CAACd,CAAC,mBAAF,CAAL,CACD,CACF,CAED,mBACE,4BAAM,QAAQ,CAAEC,aAAhB,eACE,2BAAK,SAAS,CAAC,SAAf,eACE,6BAAO,OAAO,CAAC,OAAf,UADF,cAEE,6BACE,IAAI,CAAC,MADP,CAEE,EAAE,CAAC,OAFL,CAGE,GAAG,CAAER,QAHP,CAIE,KAAK,CAAE,CAAEsB,KAAK,CAAE,OAAT,CAJT,CAKE,WAAW,CAAEf,CAAC,8BALhB,EAFF,CADF,cAWE,2BAAK,SAAS,CAAC,SAAf,eACE,6BAAO,OAAO,CAAC,UAAf,aADF,cAEE,gCACE,IAAI,CAAE,CADR,CAEE,EAAE,CAAC,UAFL,CAGE,GAAG,CAAEN,OAHP,CAIE,KAAK,CAAE,CAAEqB,KAAK,CAAE,OAAT,CAJT,CAKE,WAAW,CAAEf,CAAC,6BALhB,EAFF,CAXF,cAqBE,kCAASA,CAAC,4BAAV,CArBF,CADF,CAyBD,CAED,cAAeT,CAAAA,SAAf","sourcesContent":["import { string } from \"@inovua/reactdatagrid-community/filterTypes\";\nimport React, { useRef } from \"react\";\nimport { useAppSelector, useAppDispatch } from \"../../store/hooks\";\nimport { useTranslation } from \"react-i18next\";\nimport \"./AddNote.css\";\n\ntype AddNoteENProps = {\n  //optional chianing\n  AddNote: (notes: {\n    title?: string;\n    text?: string;\n    date?: string;\n    logger?: string;\n  }) => void;\n\n  logger: string;\n  setIsbuttonPressed: (boolean: boolean) => void;\n};\n\nfunction AddNoteEn(props: AddNoteENProps) {\n  const titleRef = useRef<HTMLInputElement>(null);\n  const textRef = useRef<HTMLTextAreaElement>(null);\n  const now = new Date();\n  const reduxUserInfo = useAppSelector((state) => state.user);\n  const { t } = useTranslation(\"main\");\n\n  function submitHandler(event: React.FormEvent) {\n    if (titleRef.current?.value && textRef.current?.value) {\n      event.preventDefault();\n      const notes = {\n        title: titleRef.current?.value,\n        text: textRef.current?.value,\n        date: now.toLocaleString(),\n        logger: reduxUserInfo,\n      };\n\n      props.AddNote(notes);\n      props.setIsbuttonPressed(false);\n      titleRef.current!.value = \"\";\n      textRef.current!.value = \"\";\n    } else {\n      alert(t(`AddNoteEn.error`));\n    }\n  }\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"control\">\n        <label htmlFor=\"title\">Title</label>\n        <input\n          type=\"text\"\n          id=\"title\"\n          ref={titleRef}\n          style={{ color: \"white\" }}\n          placeholder={t(`AddNoteEn.titlePlaceHolder`)}\n        />\n      </div>\n      <div className=\"control\">\n        <label htmlFor=\"text-log\">Text Log</label>\n        <textarea\n          rows={5}\n          id=\"text-log\"\n          ref={textRef}\n          style={{ color: \"white\" }}\n          placeholder={t(`AddNoteEn.bodyPlaceHolder`)}\n        ></textarea>\n      </div>\n      <button>{t(`SignInForm.button-submit`)}</button>\n    </form>\n  );\n}\n\nexport default AddNoteEn;\n"]},"metadata":{},"sourceType":"module"}