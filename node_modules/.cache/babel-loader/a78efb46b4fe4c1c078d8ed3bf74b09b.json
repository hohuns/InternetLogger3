{"ast":null,"code":"var _jsxFileName = \"/Users/sungjaejoo/Desktop/\\u1105\\u1175\\u110B\\u1162\\u11A8\\u1110\\u1173/\\u110B\\u1175\\u11AB\\u1110\\u1165\\u1105\\u1169\\u1100\\u1165/\\u1100\\u1175\\u11BA\\u1112\\u1165\\u1107\\u1173/ILP-main/src/components/LogInForm/Loginform.tsx\";\nimport { Divider } from \"@mui/material\";\nimport { TextField } from \"@mui/material\";\nimport { useTranslation } from \"react-i18next\";\nimport { Grid } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport React, { useRef } from \"react\";\nimport { logIn } from \"../../Service/ApiService\";\nimport { useNavigate } from \"react-router-dom\";\nimport { usersActions } from \"../../store/userSlice\";\nimport { useAppDispatch } from \"../../store/hooks\";\n\nconst Login = () => {\n  const dispatch = useAppDispatch();\n  const idRef = useRef(null);\n  const pwRef = useRef(null);\n  let navigate = useNavigate();\n  const {\n    t\n  } = useTranslation(\"main\");\n\n  const formHandler = () => {\n    var _idRef$current, _pwRef$current;\n\n    const a = logIn((_idRef$current = idRef.current) === null || _idRef$current === void 0 ? void 0 : _idRef$current.value, (_pwRef$current = pwRef.current) === null || _pwRef$current === void 0 ? void 0 : _pwRef$current.value);\n    a.then(r => {\n      console.log(r);\n\n      if ((r === null || r === void 0 ? void 0 : r.registered) === true && (r === null || r === void 0 ? void 0 : r.displayName) === \"Hans\" || (r === null || r === void 0 ? void 0 : r.registered) === true && (r === null || r === void 0 ? void 0 : r.displayName) === \"Sarah\") {\n        dispatch(usersActions.updateIdToken(r.idToken));\n        dispatch(usersActions.updateIsLoggedIn(true));\n        dispatch(usersActions.updateUser(r === null || r === void 0 ? void 0 : r.displayName));\n        localStorage.setItem(\"token\", r.idToken);\n        localStorage.setItem(\"isLoggedIn\", \"true\");\n        localStorage.setItem(\"user\", r === null || r === void 0 ? void 0 : r.displayName);\n        navigate(\"/hompageen\");\n      } else if ((r === null || r === void 0 ? void 0 : r.registered) === true && (r === null || r === void 0 ? void 0 : r.displayName) === \"성재\" || (r === null || r === void 0 ? void 0 : r.registered) === true && (r === null || r === void 0 ? void 0 : r.displayName) === \"엄마\" || (r === null || r === void 0 ? void 0 : r.registered) === true && (r === null || r === void 0 ? void 0 : r.displayName) === \"은지\" || (r === null || r === void 0 ? void 0 : r.registered) === true && (r === null || r === void 0 ? void 0 : r.displayName) === \"아빠\") {\n        dispatch(usersActions.updateIdToken(r.idToken));\n        dispatch(usersActions.updateIsLoggedIn(true));\n        dispatch(usersActions.updateUser(r === null || r === void 0 ? void 0 : r.displayName));\n        localStorage.setItem(\"token\", r.idToken);\n        localStorage.setItem(\"isLoggedIn\", \"true\");\n        localStorage.setItem(\"user\", r === null || r === void 0 ? void 0 : r.displayName);\n        navigate(\"/hompagekr\");\n      } else if ((r === null || r === void 0 ? void 0 : r.registered) === true) {\n        alert(t(\"Loginform.formHandler.alert\"));\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, t(\"Loginform.header\")), /*#__PURE__*/React.createElement(Divider, {\n    sx: {\n      backgroundColor: \"white\",\n      marginTop: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    style: {\n      marginTop: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    color: \"primary\",\n    sx: {\n      input: {\n        borderRadius: \"5px\",\n        border: \"1px solid white\",\n        color: \"white\"\n      }\n    },\n    margin: \"dense\",\n    name: \"Email\",\n    label: t(\"Loginform.input-email\"),\n    type: \"text\",\n    fullWidth: true,\n    InputLabelProps: {\n      style: {\n        color: \"#fff\"\n      }\n    },\n    inputRef: idRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    margin: \"dense\",\n    required: true,\n    name: \"pw\",\n    sx: {\n      input: {\n        borderRadius: \"5px\",\n        border: \"1px solid white\",\n        color: \"white\"\n      }\n    },\n    InputLabelProps: {\n      style: {\n        color: \"#fff\"\n      }\n    },\n    label: t(\"Loginform.input-pd\"),\n    type: \"password\",\n    fullWidth: true,\n    inputRef: pwRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      marginTop: \"30px\"\n    },\n    onClick: formHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, t(\"Loginform.button-submit\")))));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/sungjaejoo/Desktop/리액트/인터로거/깃허브/ILP-main/src/components/LogInForm/Loginform.tsx"],"names":["Divider","TextField","useTranslation","Grid","Typography","React","useRef","logIn","useNavigate","usersActions","useAppDispatch","Login","dispatch","idRef","pwRef","navigate","t","formHandler","a","current","value","then","r","console","log","registered","displayName","updateIdToken","idToken","updateIsLoggedIn","updateUser","localStorage","setItem","alert","backgroundColor","marginTop","input","borderRadius","border","color","style"],"mappings":"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","sourcesContent":["import { Divider } from \"@mui/material\";\nimport { TextField } from \"@mui/material\";\nimport { useTranslation } from \"react-i18next\";\nimport { Grid } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { logIn } from \"../../Service/ApiService\";\nimport { useNavigate } from \"react-router-dom\";\nimport { usersActions } from \"../../store/userSlice\";\nimport { useAppSelector, useAppDispatch } from \"../../store/hooks\";\n\nconst Login = () => {\n  const dispatch = useAppDispatch();\n  const idRef = useRef<HTMLInputElement>(null);\n  const pwRef = useRef<HTMLInputElement>(null);\n  let navigate = useNavigate();\n  const { t } = useTranslation(\"main\");\n\n  const formHandler = () => {\n    const a = logIn(idRef.current?.value!, pwRef.current?.value!);\n    a.then((r) => {\n      console.log(r);\n      if (\n        (r?.registered === true && r?.displayName === \"Hans\") ||\n        (r?.registered === true && r?.displayName === \"Sarah\")\n      ) {\n        dispatch(usersActions.updateIdToken(r.idToken));\n        dispatch(usersActions.updateIsLoggedIn(true));\n        dispatch(usersActions.updateUser(r?.displayName));\n        localStorage.setItem(\"token\", r.idToken);\n        localStorage.setItem(\"isLoggedIn\", \"true\");\n        localStorage.setItem(\"user\", r?.displayName);\n        navigate(\"/hompageen\");\n      } else if (\n        (r?.registered === true && r?.displayName === \"성재\") ||\n        (r?.registered === true && r?.displayName === \"엄마\") ||\n        (r?.registered === true && r?.displayName === \"은지\") ||\n        (r?.registered === true && r?.displayName === \"아빠\")\n      ) {\n        dispatch(usersActions.updateIdToken(r.idToken));\n        dispatch(usersActions.updateIsLoggedIn(true));\n        dispatch(usersActions.updateUser(r?.displayName));\n        localStorage.setItem(\"token\", r.idToken);\n        localStorage.setItem(\"isLoggedIn\", \"true\");\n        localStorage.setItem(\"user\", r?.displayName);\n        navigate(\"/hompagekr\");\n      } else if (r?.registered === true) {\n        alert(t(\"Loginform.formHandler.alert\"));\n      }\n    });\n  };\n\n  return (\n    <section>\n      <Typography variant=\"h6\" color=\"white\">\n        {t(\"Loginform.header\")}\n      </Typography>\n      <Divider sx={{ backgroundColor: \"white\", marginTop: \"10px\" }} />\n      <Grid container spacing={4} style={{ marginTop: \"10px\" }}>\n        <Grid item xs={12} sm={3}>\n          {}\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            color=\"primary\"\n            sx={{\n              input: {\n                borderRadius: \"5px\",\n                border: \"1px solid white\",\n                color: \"white\",\n              },\n            }}\n            margin=\"dense\"\n            name=\"Email\"\n            label={t(\"Loginform.input-email\")}\n            type=\"text\"\n            fullWidth\n            InputLabelProps={{\n              style: { color: \"#fff\" },\n            }}\n            inputRef={idRef}\n          />\n          <TextField\n            margin=\"dense\"\n            required\n            name=\"pw\"\n            sx={{\n              input: {\n                borderRadius: \"5px\",\n                border: \"1px solid white\",\n                color: \"white\",\n              },\n            }}\n            InputLabelProps={{\n              style: { color: \"#fff\" },\n            }}\n            label={t(\"Loginform.input-pd\")}\n            type=\"password\"\n            fullWidth\n            inputRef={pwRef}\n          />\n          <button style={{ marginTop: \"30px\" }} onClick={formHandler}>\n            {t(\"Loginform.button-submit\")}\n          </button>\n        </Grid>\n      </Grid>\n    </section>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}