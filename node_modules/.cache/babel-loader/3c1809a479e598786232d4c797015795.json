{"ast":null,"code":"import _regeneratorRuntime from\"/Users/sungjaejoo/Desktop/\\u1105\\u1175\\u110B\\u1162\\u11A8\\u1110\\u1173/\\u110B\\u1175\\u11AB\\u1110\\u1165\\u1105\\u1169\\u1100\\u1165/\\u1100\\u1175\\u11BA\\u1112\\u1165\\u1107\\u1173/ILP-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/sungjaejoo/Desktop/\\u1105\\u1175\\u110B\\u1162\\u11A8\\u1110\\u1173/\\u110B\\u1175\\u11AB\\u1110\\u1165\\u1105\\u1169\\u1100\\u1165/\\u1100\\u1175\\u11BA\\u1112\\u1165\\u1107\\u1173/ILP-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";var logIn=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(enteredEmail,enteredPassword){var data,errorMessage,json;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch(\"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCkLePHqkPxNxPalsSLE_C4CbAaOiaGwNw\",{method:\"POST\",body:JSON.stringify({email:enteredEmail,password:enteredPassword,returnSecureToken:true}),headers:{\"Content-Type\":\"application/json\"}});case 3:data=_context.sent;if(data.ok){_context.next=8;break;}console.log(data);errorMessage=\"Authentication failed! \\n 로그인에 실패하였습니다.\";throw new Error(errorMessage);case 8:_context.next=10;return data.json();case 10:json=_context.sent;console.log(json);return _context.abrupt(\"return\",json);case 15:_context.prev=15;_context.t0=_context[\"catch\"](0);alert(_context.t0);case 18:case\"end\":return _context.stop();}}},_callee,null,[[0,15]]);}));return function logIn(_x,_x2){return _ref.apply(this,arguments);};}();var signIn=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(enteredEmail,enteredPassword){var data,errorMessage,json;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return fetch(\"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCkLePHqkPxNxPalsSLE_C4CbAaOiaGwNw\",{method:\"POST\",body:JSON.stringify({email:enteredEmail,password:enteredPassword,returnSecureToken:true}),headers:{\"Content-Type\":\"application/json\"}});case 3:data=_context2.sent;if(data.ok){_context2.next=8;break;}console.log(data);errorMessage=\"Sign In failed! Password Should be more than 7 digits. \\n 회원가입에 실패하였습니다. 비밀번호는 7자 이상이여야 합니다.\";throw new Error(errorMessage);case 8:_context2.next=10;return data.json();case 10:json=_context2.sent;console.log(json);return _context2.abrupt(\"return\",json);case 15:_context2.prev=15;_context2.t0=_context2[\"catch\"](0);alert(_context2.t0);case 18:case\"end\":return _context2.stop();}}},_callee2,null,[[0,15]]);}));return function signIn(_x3,_x4){return _ref2.apply(this,arguments);};}();export{logIn,signIn};","map":{"version":3,"sources":["/Users/sungjaejoo/Desktop/리액트/인터로거/깃허브/ILP-main/src/Service/ApiService.ts"],"names":["logIn","enteredEmail","enteredPassword","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","data","ok","console","log","errorMessage","Error","json","alert","signIn"],"mappings":"ykBAAA,GAAMA,CAAAA,KAAK,0FAAG,iBAAOC,YAAP,CAA6BC,eAA7B,mLAESC,CAAAA,KAAK,CACtB,mHADsB,CAEtB,CACEC,MAAM,CAAE,MADV,CAEEC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACnBC,KAAK,CAAEP,YADY,CAEnBQ,QAAQ,CAAEP,eAFS,CAGnBQ,iBAAiB,CAAE,IAHA,CAAf,CAFR,CAOEC,OAAO,CAAE,CACP,eAAgB,kBADT,CAPX,CAFsB,CAFd,QAEJC,IAFI,kBAgBLA,IAAI,CAACC,EAhBA,yBAiBRC,OAAO,CAACC,GAAR,CAAYH,IAAZ,EACII,YAlBI,CAkBW,yCAlBX,MAmBF,IAAIC,CAAAA,KAAJ,CAAUD,YAAV,CAnBE,+BAqBSJ,CAAAA,IAAI,CAACM,IAAL,EArBT,SAqBJA,IArBI,eAsBVJ,OAAO,CAACC,GAAR,CAAYG,IAAZ,EAtBU,gCAuBHA,IAvBG,4DAyBVC,KAAK,aAAL,CAzBU,qEAAH,kBAALnB,CAAAA,KAAK,gDAAX,CA6BA,GAAMoB,CAAAA,MAAM,2FAAG,kBAAOnB,YAAP,CAA6BC,eAA7B,yLAEQC,CAAAA,KAAK,CACtB,uGADsB,CAEtB,CACEC,MAAM,CAAE,MADV,CAEEC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACnBC,KAAK,CAAEP,YADY,CAEnBQ,QAAQ,CAAEP,eAFS,CAGnBQ,iBAAiB,CAAE,IAHA,CAAf,CAFR,CAOEC,OAAO,CAAE,CACP,eAAgB,kBADT,CAPX,CAFsB,CAFb,QAELC,IAFK,mBAgBNA,IAAI,CAACC,EAhBC,0BAiBTC,OAAO,CAACC,GAAR,CAAYH,IAAZ,EACII,YAlBK,CAmBP,8FAnBO,MAoBH,IAAIC,CAAAA,KAAJ,CAAUD,YAAV,CApBG,gCAsBQJ,CAAAA,IAAI,CAACM,IAAL,EAtBR,SAsBLA,IAtBK,gBAuBXJ,OAAO,CAACC,GAAR,CAAYG,IAAZ,EAvBW,iCAwBJA,IAxBI,+DA0BXC,KAAK,cAAL,CA1BW,uEAAH,kBAANC,CAAAA,MAAM,kDAAZ,CA8BA,OAASpB,KAAT,CAAgBoB,MAAhB","sourcesContent":["const logIn = async (enteredEmail: string, enteredPassword: string) => {\n  try {\n    const data = await fetch(\n      \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCkLePHqkPxNxPalsSLE_C4CbAaOiaGwNw\",\n      {\n        method: \"POST\",\n        body: JSON.stringify({\n          email: enteredEmail,\n          password: enteredPassword,\n          returnSecureToken: true,\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n    if (!data.ok) {\n      console.log(data);\n      let errorMessage = \"Authentication failed! \\n 로그인에 실패하였습니다.\";\n      throw new Error(errorMessage);\n    }\n    const json = await data.json();\n    console.log(json);\n    return json;\n  } catch (err) {\n    alert(err);\n  }\n};\n\nconst signIn = async (enteredEmail: string, enteredPassword: string) => {\n  try {\n    const data = await fetch(\n      \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCkLePHqkPxNxPalsSLE_C4CbAaOiaGwNw\",\n      {\n        method: \"POST\",\n        body: JSON.stringify({\n          email: enteredEmail,\n          password: enteredPassword,\n          returnSecureToken: true,\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n    if (!data.ok) {\n      console.log(data);\n      let errorMessage =\n        \"Sign In failed! Password Should be more than 7 digits. \\n 회원가입에 실패하였습니다. 비밀번호는 7자 이상이여야 합니다.\";\n      throw new Error(errorMessage);\n    }\n    const json = await data.json();\n    console.log(json);\n    return json;\n  } catch (err) {\n    alert(err);\n  }\n};\n\nexport { logIn, signIn };\n"]},"metadata":{},"sourceType":"module"}