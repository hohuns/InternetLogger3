{"ast":null,"code":"var _jsxFileName = \"/Users/sungjaejoo/Desktop/\\u1105\\u1175\\u110B\\u1162\\u11A8\\u1110\\u1173/\\u110B\\u1175\\u11AB\\u1110\\u1165\\u1105\\u1169\\u1100\\u1165/\\u1100\\u1175\\u11BA\\u1112\\u1165\\u1107\\u1173/ILP-main/src/components/SignInForm/SignInForm.tsx\";\nimport { Grid } from \"@mui/material\";\nimport { TextField } from \"@mui/material\";\nimport { Divider } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport React, { useRef } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNavigate } from \"react-router-dom\";\nimport { signIn } from \"../../Service/ApiService\";\n\nconst SignInForm = () => {\n  const idRef = useRef(null);\n  const pwRef = useRef(null);\n  let navigate = useNavigate();\n  const {\n    t\n  } = useTranslation(\"main\");\n\n  const formHandler = () => {\n    var _idRef$current, _pwRef$current;\n\n    const a = signIn((_idRef$current = idRef.current) === null || _idRef$current === void 0 ? void 0 : _idRef$current.value, (_pwRef$current = pwRef.current) === null || _pwRef$current === void 0 ? void 0 : _pwRef$current.value);\n    a.then(r => {\n      if (r === null || r === void 0 ? void 0 : r.idToken) {\n        alert(t(\"SignInForm.formHandler.alert\"));\n        navigate(\"/login\");\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, t(\"SignInForm.header\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }), t(\"SignInForm.header2\")), /*#__PURE__*/React.createElement(Divider, {\n    sx: {\n      backgroundColor: \"white\",\n      marginTop: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    style: {\n      marginTop: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    color: \"primary\",\n    sx: {\n      input: {\n        borderRadius: \"5px\",\n        border: \"1px solid white\",\n        color: \"white\"\n      }\n    },\n    InputLabelProps: {\n      style: {\n        color: \"#fff\"\n      }\n    },\n    margin: \"dense\",\n    name: \"Email\",\n    label: \"Email\",\n    type: \"text\",\n    fullWidth: true,\n    inputRef: idRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    margin: \"dense\",\n    required: true,\n    name: \"pw\",\n    sx: {\n      input: {\n        borderRadius: \"5px\",\n        border: \"1px solid white\",\n        color: \"white\"\n      }\n    },\n    InputLabelProps: {\n      style: {\n        color: \"#fff\"\n      }\n    },\n    label: \"Password\",\n    type: \"password\",\n    fullWidth: true,\n    inputRef: pwRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      marginTop: \"30px\"\n    },\n    onClick: formHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, t(\"SignInForm.button-submit\")))));\n};\n\nexport default SignInForm;","map":{"version":3,"sources":["/Users/sungjaejoo/Desktop/리액트/인터로거/깃허브/ILP-main/src/components/SignInForm/SignInForm.tsx"],"names":["Grid","TextField","Divider","Typography","React","useRef","useTranslation","useNavigate","signIn","SignInForm","idRef","pwRef","navigate","t","formHandler","a","current","value","then","r","idToken","alert","backgroundColor","marginTop","input","borderRadius","border","color","style"],"mappings":"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","sourcesContent":["import { Grid } from \"@mui/material\";\nimport { TextField } from \"@mui/material\";\nimport { Divider } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport React, { useEffect, useRef } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNavigate } from \"react-router-dom\";\nimport { signIn } from \"../../Service/ApiService\";\nimport { useAppSelector, useAppDispatch } from \"../../store/hooks\";\nimport { usersActions } from \"../../store/userSlice\";\n\nconst SignInForm = () => {\n  const idRef = useRef<HTMLInputElement>(null);\n  const pwRef = useRef<HTMLInputElement>(null);\n  let navigate = useNavigate();\n  const { t } = useTranslation(\"main\");\n\n  const formHandler = () => {\n    const a = signIn(idRef.current?.value!, pwRef.current?.value!);\n    a.then((r) => {\n      if (r?.idToken) {\n        alert(t(\"SignInForm.formHandler.alert\"));\n        navigate(\"/login\");\n      }\n    });\n  };\n\n  return (\n    <section>\n      <Typography variant=\"h6\" color=\"white\">\n        {t(\"SignInForm.header\")}\n        <br />\n        {t(\"SignInForm.header2\")}\n      </Typography>\n      <Divider sx={{ backgroundColor: \"white\", marginTop: \"10px\" }} />\n      <Grid container spacing={4} style={{ marginTop: \"10px\" }}>\n        <Grid item xs={12} sm={3}>\n          {}\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            color=\"primary\"\n            sx={{\n              input: {\n                borderRadius: \"5px\",\n                border: \"1px solid white\",\n                color: \"white\",\n              },\n            }}\n            InputLabelProps={{\n              style: { color: \"#fff\" },\n            }}\n            margin=\"dense\"\n            name=\"Email\"\n            label=\"Email\"\n            type=\"text\"\n            fullWidth\n            inputRef={idRef}\n          />\n          <TextField\n            margin=\"dense\"\n            required\n            name=\"pw\"\n            sx={{\n              input: {\n                borderRadius: \"5px\",\n                border: \"1px solid white\",\n                color: \"white\",\n              },\n            }}\n            InputLabelProps={{\n              style: { color: \"#fff\" },\n            }}\n            label=\"Password\"\n            type=\"password\"\n            fullWidth\n            inputRef={pwRef}\n          />\n          <button style={{ marginTop: \"30px\" }} onClick={formHandler}>\n            {t(\"SignInForm.button-submit\")}\n          </button>\n        </Grid>\n      </Grid>\n    </section>\n  );\n};\n\nexport default SignInForm;\n"]},"metadata":{},"sourceType":"module"}