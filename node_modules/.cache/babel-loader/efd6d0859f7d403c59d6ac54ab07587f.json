{"ast":null,"code":"var _jsxFileName = \"/Users/sungjaejoo/Desktop/\\u1105\\u1175\\u110B\\u1162\\u11A8\\u1110\\u1173/\\u110B\\u1175\\u11AB\\u1110\\u1165\\u1105\\u1169\\u1100\\u1165/\\u1100\\u1175\\u11BA\\u1112\\u1165\\u1107\\u1173/ILP-main/src/App.tsx\";\nimport React, { useEffect } from \"react\";\nimport { Routes, Route, Navigate } from \"react-router-dom\";\nimport \"./App.css\";\nimport Login from \"./pages/Login\";\nimport Layout from \"./components/Layout/Layout\";\nimport MessageLogEn from \"./pages/MessageLogEn\";\nimport SignIn from \"./pages/SignIn\";\nimport ChangePassword from \"./pages/ChangePassword\";\nimport ChangeUserName from \"./pages/ChangeUserName\";\nimport InitialPage from \"./pages/InitialPage\"; // import { useSelector, useDispatch } from \"react-redux\";\n\nimport { useAppSelector, useAppDispatch } from \"./store/hooks\";\nimport { usersActions } from \"./store/userSlice\";\nimport { CssBaseline } from \"@material-ui/core\";\n\nfunction App() {\n  var _ref;\n\n  const reduxIsLoggedIn = useAppSelector(state => state.isLoggedIn);\n  const reduxUser = useAppSelector(state => state.user);\n  const dispatch = useAppDispatch();\n  const storedToken = localStorage.getItem(\"token\");\n  const storedIsLoggedIn = ((_ref = localStorage.getItem(\"isLoggedIn\")) === null || _ref === void 0 ? void 0 : _ref.toLowerCase()) === \"true\";\n  const storedUser = localStorage.getItem(\"user\");\n  useEffect(() => {\n    if (storedIsLoggedIn) {\n      dispatch(usersActions.updateIdToken(storedToken));\n      dispatch(usersActions.updateUser(storedUser));\n      dispatch(usersActions.updateIsLoggedIn(storedIsLoggedIn));\n    }\n  }, [storedToken, storedIsLoggedIn, storedUser, dispatch]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Routes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, reduxIsLoggedIn ? /*#__PURE__*/React.createElement(Route, {\n    path: \"*\",\n    element: /*#__PURE__*/React.createElement(Navigate, {\n      to: \"/initialpage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 38\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(Route, {\n    path: \"*\",\n    element: /*#__PURE__*/React.createElement(Navigate, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 38\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }), !reduxIsLoggedIn && /*#__PURE__*/React.createElement(Route, {\n    path: \"/login\",\n    element: /*#__PURE__*/React.createElement(Login, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 43\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }), reduxIsLoggedIn && /*#__PURE__*/React.createElement(Route, {\n    path: \"/initialpage\",\n    element: /*#__PURE__*/React.createElement(InitialPage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 49\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }), !reduxIsLoggedIn && /*#__PURE__*/React.createElement(Route, {\n    path: \"/signin\",\n    element: /*#__PURE__*/React.createElement(SignIn, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 44\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }), reduxIsLoggedIn && /*#__PURE__*/React.createElement(Route, {\n    path: \"/msglog\",\n    element: /*#__PURE__*/React.createElement(MessageLogEn, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 44\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }), reduxIsLoggedIn && /*#__PURE__*/React.createElement(Route, {\n    path: \"/updateusername\",\n    element: /*#__PURE__*/React.createElement(ChangeUserName, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 24\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }), reduxIsLoggedIn && /*#__PURE__*/React.createElement(Route, {\n    path: \"/changepassword\",\n    element: /*#__PURE__*/React.createElement(ChangePassword, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 24\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/sungjaejoo/Desktop/리액트/인터로거/깃허브/ILP-main/src/App.tsx"],"names":["React","useEffect","Routes","Route","Navigate","Login","Layout","MessageLogEn","SignIn","ChangePassword","ChangeUserName","InitialPage","useAppSelector","useAppDispatch","usersActions","CssBaseline","App","reduxIsLoggedIn","state","isLoggedIn","reduxUser","user","dispatch","storedToken","localStorage","getItem","storedIsLoggedIn","toLowerCase","storedUser","updateIdToken","updateUser","updateIsLoggedIn"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Routes, Route, Navigate } from \"react-router-dom\";\nimport \"./App.css\";\nimport Login from \"./pages/Login\";\nimport Layout from \"./components/Layout/Layout\";\nimport MessageLogEn from \"./pages/MessageLogEn\";\nimport MessageLogKr from \"./pages/MessageLogKr\";\nimport SignIn from \"./pages/SignIn\";\nimport ChangePassword from \"./pages/ChangePassword\";\nimport ChangeUserName from \"./pages/ChangeUserName\";\nimport InitialPage from \"./pages/InitialPage\";\n// import { useSelector, useDispatch } from \"react-redux\";\nimport { useAppSelector, useAppDispatch } from \"./store/hooks\";\nimport { usersActions } from \"./store/userSlice\";\nimport { CssBaseline } from \"@material-ui/core\";\n\nfunction App() {\n  const reduxIsLoggedIn: boolean = useAppSelector((state) => state.isLoggedIn);\n  const reduxUser: string = useAppSelector((state) => state.user);\n  const dispatch = useAppDispatch();\n  const storedToken: string = localStorage.getItem(\"token\") as string;\n  const storedIsLoggedIn: boolean =\n    localStorage.getItem(\"isLoggedIn\")!?.toLowerCase() === \"true\";\n  const storedUser: string = localStorage.getItem(\"user\") as string;\n\n  useEffect(() => {\n    if (storedIsLoggedIn) {\n      dispatch(usersActions.updateIdToken(storedToken));\n      dispatch(usersActions.updateUser(storedUser));\n      dispatch(usersActions.updateIsLoggedIn(storedIsLoggedIn));\n    }\n  }, [storedToken, storedIsLoggedIn, storedUser, dispatch]);\n\n  return (\n    <>\n      <CssBaseline />\n      <Layout>\n        <Routes>\n          {reduxIsLoggedIn ? (\n            <Route path=\"*\" element={<Navigate to=\"/initialpage\" />} />\n          ) : (\n            <Route path=\"*\" element={<Navigate to=\"/login\" />} />\n          )}\n          {!reduxIsLoggedIn && (\n            <Route path=\"/login\" element={<Login></Login>} />\n          )}\n          {reduxIsLoggedIn && (\n            <Route path=\"/initialpage\" element={<InitialPage></InitialPage>} />\n          )}\n          {!reduxIsLoggedIn && (\n            <Route path=\"/signin\" element={<SignIn></SignIn>} />\n          )}\n          {reduxIsLoggedIn && (\n            <Route path=\"/msglog\" element={<MessageLogEn></MessageLogEn>} />\n          )}\n\n          {reduxIsLoggedIn && (\n            <Route\n              path=\"/updateusername\"\n              element={<ChangeUserName></ChangeUserName>}\n            />\n          )}\n          {reduxIsLoggedIn && (\n            <Route\n              path=\"/changepassword\"\n              element={<ChangePassword></ChangePassword>}\n            />\n          )}\n        </Routes>\n      </Layout>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}