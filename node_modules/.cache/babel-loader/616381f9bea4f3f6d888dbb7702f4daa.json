{"ast":null,"code":"var _jsxFileName = \"/Users/sungjaejoo/Desktop/\\u1105\\u1175\\u110B\\u1162\\u11A8\\u1110\\u1173/\\u110B\\u1175\\u11AB\\u1110\\u1165\\u1105\\u1169\\u1100\\u1165/\\u1100\\u1175\\u11BA\\u1112\\u1165\\u1107\\u1173/ILP-main/src/components/MessageLogForm/AddNoteKr.tsx\";\nimport React, { useRef } from \"react\";\nimport \"./AddNote.css\";\nimport { useAppSelector } from \"../../store/hooks\";\n\nfunction AddNoteKr(props) {\n  const titleRef = useRef(null);\n  const textRef = useRef(null);\n  const now = new Date();\n  const reduxUserInfo = useAppSelector(state => state.user);\n\n  function submitHandler(event) {\n    var _titleRef$current, _textRef$current;\n\n    let temp = (_titleRef$current = titleRef.current) === null || _titleRef$current === void 0 ? void 0 : _titleRef$current.value;\n    let temp2 = (_textRef$current = textRef.current) === null || _textRef$current === void 0 ? void 0 : _textRef$current.value;\n\n    if (temp && temp2) {\n      var _titleRef$current2, _textRef$current2;\n\n      event.preventDefault();\n      const notes = {\n        title: (_titleRef$current2 = titleRef.current) === null || _titleRef$current2 === void 0 ? void 0 : _titleRef$current2.value,\n        text: (_textRef$current2 = textRef.current) === null || _textRef$current2 === void 0 ? void 0 : _textRef$current2.value,\n        date: now.toLocaleString(),\n        logger: reduxUserInfo\n      };\n      console.log(notes);\n      props.AddNote(notes);\n      props.setIsbuttonPressed(false);\n      titleRef.current.value = \"\";\n      textRef.current.value = \"\";\n    } else {\n      alert(\"제목과 내용을 모두 입력해주세요.\");\n    }\n\n    console.log({\n      temp,\n      temp2\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"\\uC81C\\uBAA9\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"title\",\n    ref: titleRef,\n    style: {\n      color: \"white\"\n    },\n    placeholder: \"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD558\\uC2DC\\uC624.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"text-log\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"\\uB0B4\\uC6A9\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    rows: 5,\n    id: \"text-log\",\n    ref: textRef,\n    style: {\n      color: \"white\"\n    },\n    placeholder: \"\\uB0A8\\uAE30\\uACE0 \\uC2F6\\uC740 \\uB9D0\\uC744 \\uC801\\uC73C\\uC2DC\\uC624..\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, \"\\uC81C\\uCD9C\"));\n}\n\nexport default AddNoteKr;","map":{"version":3,"sources":["/Users/sungjaejoo/Desktop/리액트/인터로거/깃허브/ILP-main/src/components/MessageLogForm/AddNoteKr.tsx"],"names":["React","useRef","useAppSelector","AddNoteKr","props","titleRef","textRef","now","Date","reduxUserInfo","state","user","submitHandler","event","temp","current","value","temp2","preventDefault","notes","title","text","date","toLocaleString","logger","console","log","AddNote","setIsbuttonPressed","alert","color"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,OAAO,eAAP;AACA,SAASC,cAAT,QAA+C,mBAA/C;;AAeA,SAASC,SAAT,CAAmBC,KAAnB,EAA0C;AACxC,QAAMC,QAAQ,GAAGJ,MAAM,CAAmB,IAAnB,CAAvB;AACA,QAAMK,OAAO,GAAGL,MAAM,CAAsB,IAAtB,CAAtB;AACA,QAAMM,GAAG,GAAG,IAAIC,IAAJ,EAAZ;AACA,QAAMC,aAAa,GAAGP,cAAc,CAAEQ,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAApC;;AAEA,WAASC,aAAT,CAAuBC,KAAvB,EAA+C;AAAA;;AAC7C,QAAIC,IAAI,wBAAGT,QAAQ,CAACU,OAAZ,sDAAG,kBAAkBC,KAA7B;AACA,QAAIC,KAAK,uBAAGX,OAAO,CAACS,OAAX,qDAAG,iBAAiBC,KAA7B;;AACA,QAAIF,IAAI,IAAIG,KAAZ,EAAmB;AAAA;;AACjBJ,MAAAA,KAAK,CAACK,cAAN;AACA,YAAMC,KAAK,GAAG;AACZC,QAAAA,KAAK,wBAAEf,QAAQ,CAACU,OAAX,uDAAE,mBAAkBC,KADb;AAEZK,QAAAA,IAAI,uBAAEf,OAAO,CAACS,OAAV,sDAAE,kBAAiBC,KAFX;AAGZM,QAAAA,IAAI,EAAEf,GAAG,CAACgB,cAAJ,EAHM;AAIZC,QAAAA,MAAM,EAAEf;AAJI,OAAd;AAOAgB,MAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACAf,MAAAA,KAAK,CAACuB,OAAN,CAAcR,KAAd;AACAf,MAAAA,KAAK,CAACwB,kBAAN,CAAyB,KAAzB;AACAvB,MAAAA,QAAQ,CAACU,OAAT,CAAkBC,KAAlB,GAA0B,EAA1B;AACAV,MAAAA,OAAO,CAACS,OAAR,CAAiBC,KAAjB,GAAyB,EAAzB;AACD,KAdD,MAcO;AACLa,MAAAA,KAAK,CAAC,oBAAD,CAAL;AACD;;AACDJ,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAEZ,MAAAA,IAAF;AAAQG,MAAAA;AAAR,KAAZ;AACD;;AAED,sBACE;AAAM,IAAA,QAAQ,EAAEL,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,EAAE,EAAC,OAFL;AAGE,IAAA,GAAG,EAAEP,QAHP;AAIE,IAAA,KAAK,EAAE;AAAEyB,MAAAA,KAAK,EAAE;AAAT,KAJT;AAKE,IAAA,WAAW,EAAC,oDALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eAWE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AACE,IAAA,IAAI,EAAE,CADR;AAEE,IAAA,EAAE,EAAC,UAFL;AAGE,IAAA,GAAG,EAAExB,OAHP;AAIE,IAAA,KAAK,EAAE;AAAEwB,MAAAA,KAAK,EAAE;AAAT,KAJT;AAKE,IAAA,WAAW,EAAC,yEALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAXF,eAqBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBArBF,CADF;AAyBD;;AAED,eAAe3B,SAAf","sourcesContent":["import React, { useRef } from \"react\";\nimport \"./AddNote.css\";\nimport { useAppSelector, useAppDispatch } from \"../../store/hooks\";\n\ntype AddNoteKRProps = {\n  //optional chianing\n  AddNote: (notes: {\n    title?: string;\n    text?: string;\n    date?: string;\n    logger?: string;\n  }) => void;\n\n  logger: string;\n  setIsbuttonPressed: (boolean: boolean) => void;\n};\n\nfunction AddNoteKr(props: AddNoteKRProps) {\n  const titleRef = useRef<HTMLInputElement>(null);\n  const textRef = useRef<HTMLTextAreaElement>(null);\n  const now = new Date();\n  const reduxUserInfo = useAppSelector((state) => state.user);\n\n  function submitHandler(event: React.FormEvent) {\n    let temp = titleRef.current?.value;\n    let temp2 = textRef.current?.value;\n    if (temp && temp2) {\n      event.preventDefault();\n      const notes = {\n        title: titleRef.current?.value,\n        text: textRef.current?.value,\n        date: now.toLocaleString(),\n        logger: reduxUserInfo,\n      };\n\n      console.log(notes);\n      props.AddNote(notes);\n      props.setIsbuttonPressed(false);\n      titleRef.current!.value = \"\";\n      textRef.current!.value = \"\";\n    } else {\n      alert(\"제목과 내용을 모두 입력해주세요.\");\n    }\n    console.log({ temp, temp2 });\n  }\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"control\">\n        <label htmlFor=\"title\">제목</label>\n        <input\n          type=\"text\"\n          id=\"title\"\n          ref={titleRef}\n          style={{ color: \"white\" }}\n          placeholder=\"제목을 입력하시오.\"\n        />\n      </div>\n      <div className=\"control\">\n        <label htmlFor=\"text-log\">내용</label>\n        <textarea\n          rows={5}\n          id=\"text-log\"\n          ref={textRef}\n          style={{ color: \"white\" }}\n          placeholder=\"남기고 싶은 말을 적으시오..\"\n        ></textarea>\n      </div>\n      <button>제출</button>\n    </form>\n  );\n}\n\nexport default AddNoteKr;\n"]},"metadata":{},"sourceType":"module"}