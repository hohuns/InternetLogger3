{"ast":null,"code":"import{Divider}from\"@mui/material\";import{TextField}from\"@mui/material\";import{useTranslation}from\"react-i18next\";import{Grid}from\"@mui/material\";import{Typography}from\"@mui/material\";import React,{useRef}from\"react\";import{logIn}from\"../../Service/ApiService\";import{useNavigate}from\"react-router-dom\";import{usersActions}from\"../../store/userSlice\";import{useAppDispatch}from\"../../store/hooks\";var Login=function Login(){var dispatch=useAppDispatch();var idRef=useRef(null);var pwRef=useRef(null);var navigate=useNavigate();var _useTranslation=useTranslation(\"main\"),t=_useTranslation.t;var formHandler=function formHandler(){var _idRef$current,_pwRef$current;var a=logIn((_idRef$current=idRef.current)===null||_idRef$current===void 0?void 0:_idRef$current.value,(_pwRef$current=pwRef.current)===null||_pwRef$current===void 0?void 0:_pwRef$current.value);a.then(function(r){console.log(r);if((r===null||r===void 0?void 0:r.registered)===true){dispatch(usersActions.updateIdToken(r.idToken));dispatch(usersActions.updateIsLoggedIn(true));dispatch(usersActions.updateUser(r===null||r===void 0?void 0:r.displayName));localStorage.setItem(\"token\",r.idToken);localStorage.setItem(\"isLoggedIn\",\"true\");localStorage.setItem(\"user\",r===null||r===void 0?void 0:r.displayName);navigate(\"/initialpage\");}else if((r===null||r===void 0?void 0:r.registered)!==true){alert(t(\"Loginform.formHandler.alert\"));}});};return/*#__PURE__*/React.createElement(\"section\",null,/*#__PURE__*/React.createElement(Typography,{variant:\"h6\",color:\"white\"},t(\"Loginform.header\")),/*#__PURE__*/React.createElement(Divider,{sx:{backgroundColor:\"white\",marginTop:\"10px\"}}),/*#__PURE__*/React.createElement(Grid,{container:true,spacing:4,style:{marginTop:\"10px\"}},/*#__PURE__*/React.createElement(Grid,{item:true,xs:12,sm:3}),/*#__PURE__*/React.createElement(Grid,{item:true,xs:12,sm:6},/*#__PURE__*/React.createElement(TextField,{required:true,color:\"primary\",sx:{input:{borderRadius:\"5px\",border:\"1px solid white\",color:\"white\"}},margin:\"dense\",name:\"Email\",label:t(\"Loginform.input-email\"),type:\"text\",fullWidth:true,InputLabelProps:{style:{color:\"#fff\"}},inputRef:idRef}),/*#__PURE__*/React.createElement(TextField,{margin:\"dense\",required:true,name:\"pw\",sx:{input:{borderRadius:\"5px\",border:\"1px solid white\",color:\"white\"}},InputLabelProps:{style:{color:\"#fff\"}},label:t(\"Loginform.input-pd\"),type:\"password\",fullWidth:true,inputRef:pwRef}),/*#__PURE__*/React.createElement(\"button\",{style:{marginTop:\"30px\"},onClick:formHandler},t(\"Loginform.button-submit\")))));};export default Login;","map":{"version":3,"sources":["/Users/sungjaejoo/Desktop/리액트/인터로거/깃허브/ILP-main/src/components/LogInForm/Loginform.tsx"],"names":["Divider","TextField","useTranslation","Grid","Typography","React","useRef","logIn","useNavigate","usersActions","useAppDispatch","Login","dispatch","idRef","pwRef","navigate","t","formHandler","a","current","value","then","r","console","log","registered","updateIdToken","idToken","updateIsLoggedIn","updateUser","displayName","localStorage","setItem","alert","backgroundColor","marginTop","input","borderRadius","border","color","style"],"mappings":"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","sourcesContent":["import { Divider } from \"@mui/material\";\nimport { TextField } from \"@mui/material\";\nimport { useTranslation } from \"react-i18next\";\nimport { Grid } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { logIn } from \"../../Service/ApiService\";\nimport { useNavigate } from \"react-router-dom\";\nimport { usersActions } from \"../../store/userSlice\";\nimport { useAppSelector, useAppDispatch } from \"../../store/hooks\";\n\nconst Login = () => {\n  const dispatch = useAppDispatch();\n  const idRef = useRef<HTMLInputElement>(null);\n  const pwRef = useRef<HTMLInputElement>(null);\n  let navigate = useNavigate();\n  const { t } = useTranslation(\"main\");\n\n  const formHandler = () => {\n    const a = logIn(idRef.current?.value!, pwRef.current?.value!);\n    a.then((r) => {\n      console.log(r);\n      if (r?.registered === true) {\n        dispatch(usersActions.updateIdToken(r.idToken));\n        dispatch(usersActions.updateIsLoggedIn(true));\n        dispatch(usersActions.updateUser(r?.displayName));\n        localStorage.setItem(\"token\", r.idToken);\n        localStorage.setItem(\"isLoggedIn\", \"true\");\n        localStorage.setItem(\"user\", r?.displayName);\n        navigate(\"/initialpage\");\n      } else if (r?.registered !== true) {\n        alert(t(\"Loginform.formHandler.alert\"));\n      }\n    });\n  };\n\n  return (\n    <section>\n      <Typography variant=\"h6\" color=\"white\">\n        {t(\"Loginform.header\")}\n      </Typography>\n      <Divider sx={{ backgroundColor: \"white\", marginTop: \"10px\" }} />\n      <Grid container spacing={4} style={{ marginTop: \"10px\" }}>\n        <Grid item xs={12} sm={3}>\n          {}\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            color=\"primary\"\n            sx={{\n              input: {\n                borderRadius: \"5px\",\n                border: \"1px solid white\",\n                color: \"white\",\n              },\n            }}\n            margin=\"dense\"\n            name=\"Email\"\n            label={t(\"Loginform.input-email\")}\n            type=\"text\"\n            fullWidth\n            InputLabelProps={{\n              style: { color: \"#fff\" },\n            }}\n            inputRef={idRef}\n          />\n          <TextField\n            margin=\"dense\"\n            required\n            name=\"pw\"\n            sx={{\n              input: {\n                borderRadius: \"5px\",\n                border: \"1px solid white\",\n                color: \"white\",\n              },\n            }}\n            InputLabelProps={{\n              style: { color: \"#fff\" },\n            }}\n            label={t(\"Loginform.input-pd\")}\n            type=\"password\"\n            fullWidth\n            inputRef={pwRef}\n          />\n          <button style={{ marginTop: \"30px\" }} onClick={formHandler}>\n            {t(\"Loginform.button-submit\")}\n          </button>\n        </Grid>\n      </Grid>\n    </section>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}