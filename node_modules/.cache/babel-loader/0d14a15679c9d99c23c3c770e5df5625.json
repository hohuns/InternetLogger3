{"ast":null,"code":"var _jsxFileName = \"/Users/sungjaejoo/Desktop/\\u1105\\u1175\\u110B\\u1162\\u11A8\\u1110\\u1173/\\u110B\\u1175\\u11AB\\u1110\\u1165\\u1105\\u1169\\u1100\\u1165/\\u1100\\u1175\\u11BA\\u1112\\u1165\\u1107\\u1173/ILP-main/src/components/UpdateProfileForm/UpdateProfileForm.tsx\";\nimport { Divider } from \"@mui/material\";\nimport { TextField } from \"@mui/material\";\nimport { Grid } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport React, { useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAppSelector } from \"../../store/hooks\";\n\nconst UpdateProfileForm = () => {\n  const userRef = useRef(null);\n  let navigate = useNavigate();\n  const reduxidToken = useAppSelector(state => state.idToken);\n  const reduxLan = useAppSelector(state => state.lan);\n\n  const formHandler = async () => {\n    var _userRef$current;\n\n    console.log((_userRef$current = userRef.current) === null || _userRef$current === void 0 ? void 0 : _userRef$current.value);\n\n    try {\n      var _userRef$current2;\n\n      const data = await fetch(\"https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyCkLePHqkPxNxPalsSLE_C4CbAaOiaGwNw\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          idToken: reduxidToken,\n          displayName: (_userRef$current2 = userRef.current) === null || _userRef$current2 === void 0 ? void 0 : _userRef$current2.value,\n          photoUrl: null,\n          returnSecureToken: false\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n\n      if (!data.ok) {\n        console.log(data);\n        let errorMessage = reduxLan === \"한국어\" ? \"사용자 이름 변경에 실패하였습니다.\" : \"Failed to change user name.\";\n        throw new Error(errorMessage);\n      }\n\n      const json = await data.json();\n      console.log(json);\n      alert(\"성공하였습니다.\");\n    } catch (err) {\n      alert(err);\n    }\n  };\n\n  console.log(reduxidToken);\n  return /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, \"\\uBCC0\\uACBD\\uD560 \\uC0AC\\uC6A9\\uC790 \\uC774\\uB984\\uC744 \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694.\", reduxLan === \"한국어\" ? \"변경할 사용자 이름을 입력해 주세요.\" : \"Input the username that you want to change.\"), /*#__PURE__*/React.createElement(Divider, {\n    sx: {\n      backgroundColor: \"white\",\n      marginTop: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    style: {\n      marginTop: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    margin: \"dense\",\n    required: true,\n    name: \"Username\",\n    sx: {\n      input: {\n        borderRadius: \"5px\",\n        border: \"1px solid white\",\n        color: \"white\"\n      }\n    },\n    InputLabelProps: {\n      style: {\n        color: \"#fff\"\n      }\n    },\n    label: \"Username\",\n    type: \"Username\",\n    fullWidth: true,\n    inputRef: userRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      marginTop: \"30px\"\n    },\n    onClick: formHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n};\n\nexport default UpdateProfileForm;","map":{"version":3,"sources":["/Users/sungjaejoo/Desktop/리액트/인터로거/깃허브/ILP-main/src/components/UpdateProfileForm/UpdateProfileForm.tsx"],"names":["Divider","TextField","Grid","Typography","React","useRef","useNavigate","useAppSelector","UpdateProfileForm","userRef","navigate","reduxidToken","state","idToken","reduxLan","lan","formHandler","console","log","current","value","data","fetch","method","body","JSON","stringify","displayName","photoUrl","returnSecureToken","headers","ok","errorMessage","Error","json","alert","err","backgroundColor","marginTop","input","borderRadius","border","color","style"],"mappings":"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","sourcesContent":["import { Divider } from \"@mui/material\";\nimport { TextField } from \"@mui/material\";\nimport { Grid } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport React, { useRef } from \"react\";\nimport { logIn } from \"../../Service/ApiService\";\nimport { useNavigate } from \"react-router-dom\";\nimport { usersActions } from \"../../store/userSlice\";\nimport { useAppSelector, useAppDispatch } from \"../../store/hooks\";\nimport { useTranslation } from \"react-i18next\";\n\nconst UpdateProfileForm = () => {\n  const userRef = useRef<HTMLInputElement>(null);\n  let navigate = useNavigate();\n  const reduxidToken = useAppSelector((state) => state.idToken);\n  const reduxLan = useAppSelector((state) => state.lan);\n\n  const formHandler = async () => {\n    console.log(userRef.current?.value);\n    try {\n      const data = await fetch(\n        \"https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyCkLePHqkPxNxPalsSLE_C4CbAaOiaGwNw\",\n        {\n          method: \"POST\",\n          body: JSON.stringify({\n            idToken: reduxidToken,\n            displayName: userRef.current?.value,\n            photoUrl: null,\n            returnSecureToken: false,\n          }),\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n      if (!data.ok) {\n        console.log(data);\n        let errorMessage =\n          reduxLan === \"한국어\"\n            ? \"사용자 이름 변경에 실패하였습니다.\"\n            : \"Failed to change user name.\";\n        throw new Error(errorMessage);\n      }\n      const json = await data.json();\n      console.log(json);\n      alert(\"성공하였습니다.\");\n    } catch (err) {\n      alert(err);\n    }\n  };\n\n  console.log(reduxidToken);\n  return (\n    <section>\n      <Typography variant=\"h6\" color=\"white\">\n        변경할 사용자 이름을 입력해 주세요.\n        {reduxLan === \"한국어\"\n          ? \"변경할 사용자 이름을 입력해 주세요.\"\n          : \"Input the username that you want to change.\"}\n      </Typography>\n      <Divider sx={{ backgroundColor: \"white\", marginTop: \"10px\" }} />\n      <Grid container spacing={4} style={{ marginTop: \"10px\" }}>\n        <Grid item xs={12} sm={3}>\n          {}\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            margin=\"dense\"\n            required\n            name=\"Username\"\n            sx={{\n              input: {\n                borderRadius: \"5px\",\n                border: \"1px solid white\",\n                color: \"white\",\n              },\n            }}\n            InputLabelProps={{\n              style: { color: \"#fff\" },\n            }}\n            label=\"Username\"\n            type=\"Username\"\n            fullWidth\n            inputRef={userRef}\n          />\n          <button style={{ marginTop: \"30px\" }} onClick={formHandler}>\n            Submit\n          </button>\n        </Grid>\n      </Grid>\n    </section>\n  );\n};\n\nexport default UpdateProfileForm;\n"]},"metadata":{},"sourceType":"module"}