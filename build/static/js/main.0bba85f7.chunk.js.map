{"version":3,"sources":["Service/ApiService.ts","store/userSlice.ts","store/hooks.ts","components/LogInForm/Loginform.tsx","pages/Login.tsx","components/Layout/MainNavigation.tsx","components/Layout/DialogUndoingBox.tsx","components/Layout/Layout.tsx","components/MessageLogForm/AddNoteEn.tsx","components/MessageLogForm/NoteEn.tsx","components/MessageLogForm/NoteListEn.tsx","components/MessageLogForm/MessageLogFormEn.tsx","pages/MessageLogEn.tsx","components/SingInForm/SignInForm.tsx","pages/SignIn.tsx","components/ChangePasswordForm/ChangePasswordForm.tsx","pages/ChangePassword.tsx","components/UpdateProfileForm/UpdateProfileForm.tsx","pages/ChangeUserName.tsx","components/InitialPage/InitialPage.tsx","pages/InitialPage.tsx","App.tsx","Locales/i18n.ts","index.tsx"],"names":["logIn","enteredEmail","enteredPassword","a","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","data","ok","console","log","Error","json","alert","signIn","userSlice","createSlice","name","initialState","user","idToken","isLoggedIn","lan","reducers","updateUser","state","action","payload","updateIdToken","updateIsLoggedIn","updateLanguage","store","configureStore","reducer","usersActions","actions","useAppSelector","useSelector","useAppDispatch","useDispatch","Login","dispatch","idRef","useRef","pwRef","navigate","useNavigate","t","useTranslation","Typography","variant","color","Divider","sx","backgroundColor","marginTop","Grid","container","spacing","style","item","xs","sm","TextField","required","input","borderRadius","border","margin","label","type","fullWidth","InputLabelProps","inputRef","onClick","current","value","then","r","registered","displayName","localStorage","setItem","Loginform","Navbar","i18n","Box","Toolbar","display","justifyContent","width","alignItems","padding","component","gutterBottom","onChange","e","target","changeLanguage","borderColor","DialogEquipment","open","close","useState","isBluePressed","setIsBluePressed","Dialog","onClose","maxWidth","DialogTitle","DialogContent","DialogContentText","align","flexDirection","md","height","src","href","DialogActions","Button","disabled","background","Layout","props","setOpen","handleClose","reduxUser","reduxIsLoggedIn","openBox","setOpenBox","icon","filter","Boolean","MainNavigation","flexGrow","children","SpeedDial","ariaLabel","top","right","bottom","left","position","SpeedDialIcon","onOpen","map","SpeedDialAction","key","tooltipTitle","tooltipOpen","removeItem","DialogUndoingBox","AddNoteEn","titleRef","textRef","now","Date","reduxUserInfo","onSubmit","event","preventDefault","notes","title","text","date","toLocaleString","logger","AddNote","setIsbuttonPressed","className","htmlFor","id","ref","placeholder","rows","StyledLi","styled","li","NoteEn","NoteListEn","overflowY","note","MessageLogFormEn","setNote","error","setError","isLoading","setIsLoading","isbuttonPressed","fetchNoteHandlerEn","useCallback","response","loadedNotes","push","reverse","message","useEffect","content","length","marginLeft","MessageLogEn","SignInForm","SignIn","ChangePasswordForm","reduxidToken","formHandler","errorMessage","ChangePassword","UpdateProfileForm","userRef","photoUrl","ChangeUserName","InitialPage","App","storedToken","getItem","storedIsLoggedIn","toLowerCase","storedUser","CssBaseline","path","element","to","resources","en","kr","use","initReactI18next","init","lng","fallbackLng","default","debug","keySeparator","interpolation","escapeValue","react","useSuspense","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0bba85f7.chunk.js","sourcesContent":["const logIn = async (enteredEmail: string, enteredPassword: string) => {\n  try {\n    const data = await fetch(\n      \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCkLePHqkPxNxPalsSLE_C4CbAaOiaGwNw\",\n      {\n        method: \"POST\",\n        body: JSON.stringify({\n          email: enteredEmail,\n          password: enteredPassword,\n          returnSecureToken: true,\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n    if (!data.ok) {\n      console.log(data);\n      let errorMessage = \"Authentication failed! \\n 로그인에 실패하였습니다.\";\n      throw new Error(errorMessage);\n    }\n    const json = await data.json();\n    console.log(json);\n    return json;\n  } catch (err) {\n    alert(err);\n  }\n};\n\nconst signIn = async (enteredEmail: string, enteredPassword: string) => {\n  try {\n    const data = await fetch(\n      \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCkLePHqkPxNxPalsSLE_C4CbAaOiaGwNw\",\n      {\n        method: \"POST\",\n        body: JSON.stringify({\n          email: enteredEmail,\n          password: enteredPassword,\n          returnSecureToken: true,\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n    if (!data.ok) {\n      console.log(data);\n      let errorMessage =\n        \"Sign In failed! Password Should be more than 7 digits. \\n 회원가입에 실패하였습니다. 비밀번호는 7자 이상이여야 합니다.\";\n      throw new Error(errorMessage);\n    }\n    const json = await data.json();\n    console.log(json);\n    return json;\n  } catch (err) {\n    alert(err);\n  }\n};\n\nexport { logIn, signIn };\n","import { createSlice, configureStore, PayloadAction } from \"@reduxjs/toolkit\";\n\ntype initialState = {\n  user: string;\n  idToken: string;\n  isLoggedIn: boolean;\n  lan: string;\n};\n\nconst initialState: initialState = {\n  user: \"\",\n  idToken: \"\",\n  isLoggedIn: false,\n  lan: \"\",\n};\n\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: initialState,\n  reducers: {\n    updateUser(state, action: PayloadAction<string>) {\n      state.user = action.payload;\n    },\n    updateIdToken(state, action: PayloadAction<string>) {\n      state.idToken = action.payload;\n    },\n    updateIsLoggedIn(state, action: PayloadAction<boolean>) {\n      state.isLoggedIn = action.payload;\n    },\n    updateLanguage(state, action: PayloadAction<string>) {\n      state.lan = action.payload;\n    },\n  },\n});\n\n//Create the store\nconst store = configureStore({\n  reducer: userSlice.reducer,\n});\n\nexport const usersActions = userSlice.actions;\nexport default store;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport type { RootState, AppDispatch } from \"./userSlice\";\n\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\n","import { Divider } from \"@mui/material\";\nimport { TextField } from \"@mui/material\";\nimport { useTranslation } from \"react-i18next\";\nimport { Grid } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { logIn } from \"../../Service/ApiService\";\nimport { useNavigate } from \"react-router-dom\";\nimport { usersActions } from \"../../store/userSlice\";\nimport { useAppSelector, useAppDispatch } from \"../../store/hooks\";\n\nconst Login = () => {\n  const dispatch = useAppDispatch();\n  const idRef = useRef<HTMLInputElement>(null);\n  const pwRef = useRef<HTMLInputElement>(null);\n  let navigate = useNavigate();\n  const { t } = useTranslation(\"main\");\n\n  const formHandler = () => {\n    const a = logIn(idRef.current?.value!, pwRef.current?.value!);\n    a.then((r) => {\n      console.log(r);\n      if (r?.registered === true) {\n        dispatch(usersActions.updateIdToken(r.idToken));\n        dispatch(usersActions.updateIsLoggedIn(true));\n        dispatch(usersActions.updateUser(r?.displayName));\n        localStorage.setItem(\"token\", r.idToken);\n        localStorage.setItem(\"isLoggedIn\", \"true\");\n        localStorage.setItem(\"user\", r?.displayName);\n        navigate(\"/initialpage\");\n      } else if (r?.registered !== true) {\n        alert(t(\"Loginform.formHandler.alert\"));\n      }\n    });\n  };\n\n  return (\n    <section>\n      <Typography variant=\"h6\" color=\"white\">\n        {t(\"Loginform.header\")}\n      </Typography>\n      <Divider sx={{ backgroundColor: \"white\", marginTop: \"10px\" }} />\n      <Grid container spacing={4} style={{ marginTop: \"10px\" }}>\n        <Grid item xs={12} sm={3}>\n          {}\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            color=\"primary\"\n            sx={{\n              input: {\n                borderRadius: \"5px\",\n                border: \"1px solid white\",\n                color: \"white\",\n              },\n            }}\n            margin=\"dense\"\n            name=\"Email\"\n            label={t(\"Loginform.input-email\")}\n            type=\"text\"\n            fullWidth\n            InputLabelProps={{\n              style: { color: \"#fff\" },\n            }}\n            inputRef={idRef}\n          />\n          <TextField\n            margin=\"dense\"\n            required\n            name=\"pw\"\n            sx={{\n              input: {\n                borderRadius: \"5px\",\n                border: \"1px solid white\",\n                color: \"white\",\n              },\n            }}\n            InputLabelProps={{\n              style: { color: \"#fff\" },\n            }}\n            label={t(\"Loginform.input-pd\")}\n            type=\"password\"\n            fullWidth\n            inputRef={pwRef}\n          />\n          <button style={{ marginTop: \"30px\" }} onClick={formHandler}>\n            {t(\"Loginform.button-submit\")}\n          </button>\n        </Grid>\n      </Grid>\n    </section>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport Loginform from \"../components/LogInForm/Loginform\";\n\nconst Login = () => {\n  return (\n    <>\n      <Loginform />\n    </>\n  );\n};\n\nexport default Login;\n","import { Toolbar, IconButton, Typography } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { Box } from \"@mui/system\";\nimport { useTranslation } from \"react-i18next\";\nimport { useAppSelector, useAppDispatch } from \"../../store/hooks\";\nimport { useNavigate } from \"react-router-dom\";\nimport { usersActions } from \"../../store/userSlice\";\n\nconst Navbar = () => {\n  let navigate = useNavigate();\n  const { t, i18n } = useTranslation(\"main\");\n\n  const LanguageChangeHandler = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    console.log(e.target.value);\n    i18n.changeLanguage(e.target.value);\n  };\n\n  // const logoutHandler = () => {\n  //   dispatch(usersActions.updateIdToken(\"\"));\n  //   dispatch(usersActions.updateIsLoggedIn(false));\n  //   dispatch(usersActions.updateUser(\"\"));\n  //   localStorage.removeItem(\"token\");\n  //   localStorage.removeItem(\"isLoggedIn\");\n  //   localStorage.removeItem(\"user\");\n  //   navigate(\"/login\");\n  // };\n\n  return (\n    <>\n      <Box\n        sx={{\n          backgroundColor:\n            \"linear-gradient(to left, #3399ff 27%, #9999ff 100%);\",\n        }}\n      >\n        <Toolbar>\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              width: \"100%\",\n              alignItems: \"center\",\n              padding: \"10px 0px\",\n            }}\n            component=\"div\"\n          >\n            <Typography\n              variant=\"body2\"\n              component=\"div\"\n              gutterBottom\n              sx={{ color: \"white\" }}\n            >\n              InterLogger v3\n            </Typography>\n            <select\n              onChange={LanguageChangeHandler}\n              style={{\n                color: \"white\",\n                backgroundColor: \"#00000000\",\n                borderColor: \"#00000000\",\n              }}\n            >\n              <option value=\"kr\">한국어</option>\n              <option value=\"en\">English</option>\n            </select>\n          </Box>\n        </Toolbar>\n      </Box>\n    </>\n  );\n};\n\nexport default Navbar;\n","/* eslint-disable react/jsx-boolean-value */\n/* eslint-disable no-useless-escape */\n/* eslint-disable arrow-body-style */\n/* eslint-disable no-param-reassign */\n/* eslint-disable yoda */\n/* eslint-disable prefer-const */\n/* eslint-disable no-undef */\n/* eslint-disable no-unused-vars */\nimport Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogContentText from \"@mui/material/DialogContentText\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport PropTypes from \"prop-types\";\nimport Divider from \"@mui/material/Divider\";\nimport {\n  Grid,\n  TextField,\n  Box,\n  Typography,\n  Menu,\n  MenuItem,\n} from \"@mui/material\";\nimport { useState, useEffect } from \"react\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport FormControl from \"@mui/material/FormControl\";\nimport React from \"react\";\nimport { styled } from \"@mui/material/styles\";\n\ntype DialogEquipmentProps = {\n  open: boolean;\n  close: () => void;\n};\n\n// eslint-disable-next-line arrow-body-style\nconst DialogEquipment = ({ open, close }: DialogEquipmentProps) => {\n  const [isBluePressed, setIsBluePressed] = useState<boolean>(false);\n\n  return (\n    <>\n      <Dialog open={open} onClose={close} fullWidth={true} maxWidth=\"sm\">\n        <DialogTitle>Undoing Box</DialogTitle>\n        <DialogContent>\n          <DialogContentText align=\"left\">\n            <Grid\n              container\n              spacing={8}\n              sx={{\n                display: \"flex\",\n                alignItems: \"center\",\n                flexDirection: \"row\",\n              }}\n            >\n              {!isBluePressed && (\n                <Grid item xs={12} md={12}>\n                  <Typography variant=\"body2\">\n                    우리 이쁜이 안녕? You pressed this button because you wanted\n                    to say goodbye or break up to me, right? You must have had a\n                    hard time today. 우리 이쁜이. 너무 수고했어. <br />\n                  </Typography>\n                  <br />\n                  <Typography variant=\"body1\">\n                    Lets take some 5 min of Rest time first and cool down\n                    yourself.\n                  </Typography>\n                  <br />\n                  <Typography variant=\"body2\">\n                    Did you all rest? I think I've probably cleared my mind.\n                    Then let's press blue button. Then you'll change your mind\n                    about breaking up.\n                  </Typography>\n                </Grid>\n              )}\n            </Grid>\n            {isBluePressed && (\n              <Grid item xs={12} sm={12}>\n                <Box\n                  sx={{ width: \"400px\", height: \"600px\" }}\n                  component=\"img\"\n                  src=\"image/sarah.jpeg\"\n                ></Box>\n                <Typography variant=\"body2\">\n                  오빠도 우리돼지를 많이 사랑하고 믿지. 오빠랑 다시 한번\n                  전화해서 이야기 해보자 이쁜이. We cannot break easily like\n                  this. <br />\n                  We can fix the issue with call. Let make a call bae.\n                </Typography>\n                <br />\n                <a href=\"tel:+85267901714\"> 오빠한테 전화 걸기 </a>\n              </Grid>\n            )}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            variant=\"contained\"\n            style={{ color: \"white\" }}\n            onClick={() => {\n              setIsBluePressed(true);\n            }}\n            disabled={isBluePressed}\n          >\n            Press Me\n          </Button>\n          <Button\n            variant=\"contained\"\n            style={{ color: \"white\", background: \"red\" }}\n            onClick={() => {\n              close();\n              setIsBluePressed(false);\n            }}\n          >\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default DialogEquipment;\n","import MainNavigation from \"./MainNavigation\";\nimport React, { useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport SpeedDial from \"@mui/material/SpeedDial\";\nimport SpeedDialIcon from \"@mui/material/SpeedDialIcon\";\nimport SpeedDialAction from \"@mui/material/SpeedDialAction\";\nimport LoginIcon from \"@mui/icons-material/Login\";\nimport LogoutIcon from \"@mui/icons-material/Logout\";\nimport AddToHomeScreenIcon from \"@mui/icons-material/AddToHomeScreen\";\nimport VpnKeyIcon from \"@mui/icons-material/VpnKey\";\nimport DateRangeIcon from \"@mui/icons-material/DateRange\";\nimport { useAppSelector, useAppDispatch } from \"../../store/hooks\";\nimport MessageIcon from \"@mui/icons-material/Message\";\nimport HomeIcon from \"@mui/icons-material/Home\";\nimport { usersActions } from \"../../store/userSlice\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport DialogUndoingBox from \"./DialogUndoingBox\";\nimport DriveFileRenameOutlineIcon from \"@mui/icons-material/DriveFileRenameOutline\";\n\nconst Layout = (props: { children: React.ReactFragment }) => {\n  const [open, setOpen] = useState(false);\n  const { t } = useTranslation(\"main\");\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  const dispatch = useAppDispatch();\n  let navigate = useNavigate();\n  const reduxUser: string = useAppSelector((state) => state.user);\n  const reduxIsLoggedIn = useAppSelector((state) => state.isLoggedIn);\n  const [openBox, setOpenBox] = useState(false);\n\n  const dialogClickHandler = () => {\n    setOpenBox(true);\n  };\n\n  const dialogCloseHandler = () => {\n    setOpenBox(false);\n  };\n\n  const style: React.CSSProperties = {\n    margin: 0,\n    top: \"auto\",\n    right: 20,\n    bottom: 20,\n    left: \"auto\",\n    position: \"fixed\",\n  };\n\n  const actions = [\n    reduxIsLoggedIn\n      ? { icon: <LogoutIcon />, name: t(`Layout.iconText-logout`) }\n      : { icon: <LoginIcon />, name: t(`Layout.iconText-login`) },\n    !reduxIsLoggedIn\n      ? { icon: <AddToHomeScreenIcon />, name: t(`Layout.iconText-signin`) }\n      : null,\n    reduxIsLoggedIn\n      ? { icon: <VpnKeyIcon />, name: t(`Layout.iconText-changepw`) }\n      : null,\n    reduxIsLoggedIn\n      ? { icon: <MessageIcon />, name: t(`Loginform.input-messageLog`) }\n      : null,\n    reduxIsLoggedIn\n      ? {\n          icon: <DriveFileRenameOutlineIcon />,\n          name: t(`Layout.iconText-changeNickname`),\n        }\n      : null,\n    reduxIsLoggedIn\n      ? { icon: <HomeIcon />, name: t(`Loginform.input-home`) }\n      : null,\n  ].filter(Boolean);\n\n  const logoutHandler = () => {\n    dispatch(usersActions.updateIdToken(\"\"));\n    dispatch(usersActions.updateIsLoggedIn(false));\n    dispatch(usersActions.updateUser(\"\"));\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"isLoggedIn\");\n    localStorage.removeItem(\"user\");\n    navigate(\"/login\");\n  };\n\n  console.log(reduxUser);\n  return (\n    <div>\n      <MainNavigation />\n      <Box\n        sx={{\n          flexGrow: 1,\n        }}\n      >\n        <main>{props.children}</main>\n        <SpeedDial\n          ariaLabel=\"SpeedDial tooltip example\"\n          style={style}\n          icon={<SpeedDialIcon />}\n          onClose={handleClose}\n          onOpen={handleOpen}\n          open={open}\n        >\n          {actions.map((action) => (\n            <SpeedDialAction\n              key={action?.name}\n              icon={action?.icon}\n              tooltipTitle={action?.name}\n              tooltipOpen\n              onClick={() => {\n                if (action?.name === \"LogIn\" || action?.name === \"로그인\") {\n                  navigate(\"/login\");\n                } else if (\n                  action?.name === \"LogOut\" ||\n                  action?.name === \"로그아웃\"\n                ) {\n                  logoutHandler();\n                } else if (\n                  action?.name === \"SingIn\" ||\n                  action?.name === \"가입하기\"\n                ) {\n                  navigate(\"/signin\");\n                } else if (\n                  action?.name === \"Change Password\" ||\n                  action?.name === \"비밀번호 변경\"\n                ) {\n                  navigate(\"/changepassword\");\n                } else if (\n                  action?.name === \"Message Log\" ||\n                  action?.name === \"메세지 로그\"\n                ) {\n                  navigate(\"/msglog\");\n                } else if (action?.name === \"Home\" || action?.name === \"홈\") {\n                  navigate(\"/initialpage\");\n                } else if (action?.name === \"Undoing Box\") {\n                  dialogClickHandler();\n                } else if (\n                  action?.name === \"닉네임 변경\" ||\n                  action?.name === \"Change Nickname\"\n                ) {\n                  navigate(\"/updateusername\");\n                }\n                handleClose();\n              }}\n            />\n          ))}\n        </SpeedDial>\n      </Box>\n      <DialogUndoingBox open={openBox} close={dialogCloseHandler} />\n    </div>\n  );\n};\n\nexport default Layout;\n","import { string } from \"@inovua/reactdatagrid-community/filterTypes\";\nimport React, { useRef } from \"react\";\nimport { useAppSelector, useAppDispatch } from \"../../store/hooks\";\nimport { useTranslation } from \"react-i18next\";\nimport \"./AddNote.css\";\n\ntype AddNoteENProps = {\n  //optional chianing\n  AddNote: (notes: {\n    title?: string;\n    text?: string;\n    date?: string;\n    logger?: string;\n  }) => void;\n\n  logger: string;\n  setIsbuttonPressed: (boolean: boolean) => void;\n};\n\nfunction AddNoteEn(props: AddNoteENProps) {\n  const titleRef = useRef<HTMLInputElement>(null);\n  const textRef = useRef<HTMLTextAreaElement>(null);\n  const now = new Date();\n  const reduxUserInfo = useAppSelector((state) => state.user);\n  const { t } = useTranslation(\"main\");\n\n  function submitHandler(event: React.FormEvent) {\n    if (titleRef.current?.value && textRef.current?.value) {\n      event.preventDefault();\n      const notes = {\n        title: titleRef.current?.value,\n        text: textRef.current?.value,\n        date: now.toLocaleString(),\n        logger: reduxUserInfo,\n      };\n\n      props.AddNote(notes);\n      props.setIsbuttonPressed(false);\n      titleRef.current!.value = \"\";\n      textRef.current!.value = \"\";\n    } else {\n      alert(t(`AddNoteEn.error`));\n    }\n  }\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"control\">\n        <label htmlFor=\"title\">Title</label>\n        <input\n          type=\"text\"\n          id=\"title\"\n          ref={titleRef}\n          style={{ color: \"white\" }}\n          placeholder={t(`AddNoteEn.titlePlaceHolder`)}\n        />\n      </div>\n      <div className=\"control\">\n        <label htmlFor=\"text-log\">Text Log</label>\n        <textarea\n          rows={5}\n          id=\"text-log\"\n          ref={textRef}\n          style={{ color: \"white\" }}\n          placeholder={t(`AddNoteEn.bodyPlaceHolder`)}\n        ></textarea>\n      </div>\n      <button>{t(`SignInForm.button-submit`)}</button>\n    </form>\n  );\n}\n\nexport default AddNoteEn;\n","import styled from \"@emotion/styled\";\nimport React from \"react\";\n\nimport \"./Note.css\";\n\nconst NoteEn = (props: {\n  title:\n    | boolean\n    | React.ReactChild\n    | React.ReactFragment\n    | React.ReactPortal\n    | null\n    | undefined;\n  text:\n    | boolean\n    | React.ReactChild\n    | React.ReactFragment\n    | React.ReactPortal\n    | null\n    | undefined;\n  date:\n    | boolean\n    | React.ReactChild\n    | React.ReactFragment\n    | React.ReactPortal\n    | null\n    | undefined;\n}) => {\n  return (\n    <div>\n      <StyledLi>\n        <h3>{props.title}</h3>\n        <p>{props.text}</p>\n        <h6>{props.date}</h6>\n      </StyledLi>\n    </div>\n  );\n};\n\ninterface IStyledLi {\n  margin?: number;\n}\n\nconst StyledLi = styled.li<IStyledLi>`\n  margin: ${(props) => (props.margin ? props.margin + \"px\" : \"1rem;\")};\n  padding: 1rem;\n  background-color: transparent;\n  background-repeat: no-repeat;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.26);\n  border-radius: 6px;\n  text-align: center;\n  color: white;\n`;\n\nexport default NoteEn;\n","import React from \"react\";\nimport Note from \"./NoteEn\";\nimport \"./NoteList.css\";\n\nconst NoteListEn = (props: { note: any[] }) => {\n  return (\n    <div style={{ overflowY: \"scroll\", height: 300 }}>\n      <ul className=\"note-list\">\n        {props.note.map((note) => (\n          <Note\n            key={note.id}\n            title={note.title}\n            date={note.date}\n            text={note.text}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default NoteListEn;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport AddNoteEn from \"./AddNoteEn\";\nimport { useAppSelector, useAppDispatch } from \"../../store/hooks\";\nimport { useNavigate } from \"react-router-dom\";\nimport { usersActions } from \"../../store/userSlice\";\nimport { useTranslation } from \"react-i18next\";\nimport NoteListEn from \"./NoteListEn\";\n\nconst MessageLogFormEn = () => {\n  const reduxUser: string = useAppSelector((state) => state.user);\n  const dispatch = useAppDispatch();\n  const [note, setNote] = useState<\n    { id: string; title: any; text: any; date: string }[]\n  >([]);\n  const [error, setError] = useState<string>(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [isbuttonPressed, setIsbuttonPressed] = useState<boolean>(false);\n  let navigate = useNavigate();\n  const { t } = useTranslation(\"main\");\n\n  const fetchNoteHandlerEn = useCallback(async () => {\n    setIsLoading(true);\n    setError(\"\");\n    try {\n      const response = await fetch(\n        \"https://react-http-2887f-default-rtdb.firebaseio.com/notesen.json\"\n      );\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const data = await response.json();\n      console.log(data);\n      const loadedNotes: { id: string; title: any; text: any; date: string }[] =\n        [];\n      for (const key in data) {\n        loadedNotes.push({\n          id: key,\n          title: data[key].title,\n          text: data[key].text,\n          date: `${data[key].logger}  ${t(`MessageLogFormEn.logMessage`)} ${\n            data[key].date\n          }....`,\n        });\n      }\n      loadedNotes.reverse();\n      console.log(loadedNotes);\n      setNote(loadedNotes);\n    } catch (err) {\n      if (err instanceof Error) {\n        setError(err.message);\n      }\n    }\n    setIsLoading(false);\n  }, []);\n\n  async function addNoteHandlerEn(note: {\n    id?: string;\n    title?: string;\n    text?: string;\n    date?: string;\n  }) {\n    const response = await fetch(\n      \"https://react-http-2887f-default-rtdb.firebaseio.com/notesen.json\",\n      {\n        method: \"POST\",\n        body: JSON.stringify(note),\n        headers: {\n          \"Content-Type\": \"appication/json\",\n        },\n      }\n    );\n    const data = await response.json();\n    console.log(data);\n    alert(t(`MessageLogFormEn.alert`));\n    fetchNoteHandlerEn();\n  }\n\n  useEffect(() => {\n    fetchNoteHandlerEn();\n  }, [fetchNoteHandlerEn]);\n\n  let content = (\n    <p style={{ color: \"white\" }}>{t(`MessageLogFormEn.alert2`)}</p>\n  );\n\n  if (note.length > 0) {\n    content = <NoteListEn note={note} />;\n  }\n\n  if (error) {\n    content = <p style={{ color: \"white\" }}>{error}</p>;\n  }\n\n  if (isLoading) {\n    content = <p style={{ color: \"white\" }}>Loading...</p>;\n  }\n\n  return (\n    <div>\n      <section>\n        <h3 style={{ color: \"white\" }}>\n          {t(`MessageLogFormEn.headerText`)} {reduxUser}{\" \"}\n        </h3>\n        <button onClick={fetchNoteHandlerEn}>\n          {t(`MessageLogFormEn.button-update`)}\n        </button>\n        <button\n          onClick={() => {\n            setIsbuttonPressed(true);\n          }}\n          style={{ marginLeft: \"20px\" }}\n        >\n          {t(`MessageLogFormEn.button-wrtie`)}\n        </button>\n      </section>\n      {isbuttonPressed && (\n        <section>\n          <h3 style={{ color: \"white\" }}>{t(`MessageLogFormEn.logText`)}</h3>\n          <AddNoteEn\n            AddNote={addNoteHandlerEn}\n            logger={reduxUser}\n            setIsbuttonPressed={setIsbuttonPressed}\n          ></AddNoteEn>\n        </section>\n      )}\n      <section>\n        <h3 style={{ color: \"white\" }}>Log</h3>\n        {content}\n      </section>\n    </div>\n  );\n};\n\nexport default MessageLogFormEn;\n","import React from \"react\";\nimport MessageLogFormEn from \"../components/MessageLogForm/MessageLogFormEn\";\n\nconst MessageLogEn = () => {\n  return <MessageLogFormEn />;\n};\n\nexport default MessageLogEn;\n","import { Grid } from \"@mui/material\";\nimport { TextField } from \"@mui/material\";\nimport { Divider } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport React, { useEffect, useRef } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNavigate } from \"react-router-dom\";\nimport { signIn } from \"../../Service/ApiService\";\nimport { useAppSelector, useAppDispatch } from \"../../store/hooks\";\nimport { usersActions } from \"../../store/userSlice\";\n\nconst SignInForm = () => {\n  const idRef = useRef<HTMLInputElement>(null);\n  const pwRef = useRef<HTMLInputElement>(null);\n  let navigate = useNavigate();\n  const { t } = useTranslation(\"main\");\n\n  const formHandler = () => {\n    const a = signIn(idRef.current?.value!, pwRef.current?.value!);\n    a.then((r) => {\n      if (r?.idToken) {\n        alert(t(\"SignInForm.formHandler.alert\"));\n        navigate(\"/login\");\n      }\n    });\n  };\n\n  return (\n    <section>\n      <Typography variant=\"h6\" color=\"white\">\n        {t(\"SignInForm.header\")}\n        <br />\n        {t(\"SignInForm.header2\")}\n      </Typography>\n      <Divider sx={{ backgroundColor: \"white\", marginTop: \"10px\" }} />\n      <Grid container spacing={4} style={{ marginTop: \"10px\" }}>\n        <Grid item xs={12} sm={3}>\n          {}\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            color=\"primary\"\n            sx={{\n              input: {\n                borderRadius: \"5px\",\n                border: \"1px solid white\",\n                color: \"white\",\n              },\n            }}\n            InputLabelProps={{\n              style: { color: \"#fff\" },\n            }}\n            margin=\"dense\"\n            name=\"Email\"\n            label=\"Email\"\n            type=\"text\"\n            fullWidth\n            inputRef={idRef}\n          />\n          <TextField\n            margin=\"dense\"\n            required\n            name=\"pw\"\n            sx={{\n              input: {\n                borderRadius: \"5px\",\n                border: \"1px solid white\",\n                color: \"white\",\n              },\n            }}\n            InputLabelProps={{\n              style: { color: \"#fff\" },\n            }}\n            label=\"Password\"\n            type=\"password\"\n            fullWidth\n            inputRef={pwRef}\n          />\n          <button style={{ marginTop: \"30px\" }} onClick={formHandler}>\n            {t(\"SignInForm.button-submit\")}\n          </button>\n        </Grid>\n      </Grid>\n    </section>\n  );\n};\n\nexport default SignInForm;\n","import React from \"react\";\nimport SignInform from \"../components/SingInForm/SignInForm\";\nfunction SignIn() {\n  return <SignInform />;\n}\n\nexport default SignIn;\n","import { Divider } from \"@mui/material\";\nimport { TextField } from \"@mui/material\";\nimport { Grid } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport React, { useRef } from \"react\";\nimport { logIn } from \"../../Service/ApiService\";\nimport { useNavigate } from \"react-router-dom\";\nimport { usersActions } from \"../../store/userSlice\";\nimport { useAppSelector, useAppDispatch } from \"../../store/hooks\";\nimport { useTranslation } from \"react-i18next\";\n\nconst ChangePasswordForm = () => {\n  const pwRef = useRef<HTMLInputElement>(null);\n  let navigate = useNavigate();\n  const reduxidToken: string = useAppSelector((state) => state.idToken);\n  const reduxLan: string = useAppSelector((state) => state.lan);\n  const { t } = useTranslation(\"main\");\n  const dispatch = useAppDispatch();\n\n  const logoutHandler = () => {\n    dispatch(usersActions.updateIdToken(\"\"));\n    dispatch(usersActions.updateIsLoggedIn(false));\n    dispatch(usersActions.updateUser(\"\"));\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"isLoggedIn\");\n    localStorage.removeItem(\"user\");\n    navigate(\"/login\");\n  };\n\n  const formHandler = async () => {\n    console.log(pwRef.current?.value);\n    try {\n      const data = await fetch(\n        \"https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyCkLePHqkPxNxPalsSLE_C4CbAaOiaGwNw\",\n        {\n          method: \"POST\",\n          body: JSON.stringify({\n            idToken: reduxidToken,\n            password: pwRef.current?.value,\n            returnSecureToken: false,\n          }),\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n      if (!data.ok) {\n        console.log(data);\n        let errorMessage = t(\"ChangePasswordForm.formHandler-alert\");\n        throw new Error(errorMessage);\n      }\n\n      const json = await data.json();\n      console.log(json);\n      alert(t(\"ChangePasswordForm.formHandler-alert2\"));\n      logoutHandler();\n    } catch (err) {\n      alert(err);\n    }\n  };\n\n  console.log(reduxidToken);\n  return (\n    <section>\n      <Typography variant=\"h6\" color=\"white\">\n        {t(\"ChangePasswordForm.formHandler-header\")}\n      </Typography>\n      <Divider sx={{ backgroundColor: \"white\", marginTop: \"10px\" }} />\n      <Grid container spacing={4} style={{ marginTop: \"10px\" }}>\n        <Grid item xs={12} sm={3}>\n          {}\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            margin=\"dense\"\n            required\n            name=\"pw\"\n            sx={{\n              input: {\n                borderRadius: \"5px\",\n                border: \"1px solid white\",\n                color: \"white\",\n              },\n            }}\n            label={t(\"Loginform.input-pd\")}\n            type=\"password\"\n            fullWidth\n            inputRef={pwRef}\n            InputLabelProps={{\n              style: { color: \"#fff\" },\n            }}\n          />\n          <button style={{ marginTop: \"30px\" }} onClick={formHandler}>\n            {t(\"SignInForm.button-submit\")}\n          </button>\n        </Grid>\n      </Grid>\n    </section>\n  );\n};\n\nexport default ChangePasswordForm;\n","import React from \"react\";\nimport ChangePasswordForm from \"../components/ChangePasswordForm/ChangePasswordForm\";\nconst ChangePassword = () => {\n  return <ChangePasswordForm />;\n};\n\nexport default ChangePassword;\n","import { Divider } from \"@mui/material\";\nimport { TextField } from \"@mui/material\";\nimport { Grid } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport React, { useRef } from \"react\";\nimport { logIn } from \"../../Service/ApiService\";\nimport { useNavigate } from \"react-router-dom\";\nimport { usersActions } from \"../../store/userSlice\";\nimport { useAppSelector, useAppDispatch } from \"../../store/hooks\";\nimport { useTranslation } from \"react-i18next\";\n\nconst UpdateProfileForm = () => {\n  const userRef = useRef<HTMLInputElement>(null);\n  let navigate = useNavigate();\n  const reduxidToken = useAppSelector((state) => state.idToken);\n  const reduxLan = useAppSelector((state) => state.lan);\n  const { t } = useTranslation(\"main\");\n\n  const formHandler = async () => {\n    console.log(userRef.current?.value);\n    try {\n      const data = await fetch(\n        \"https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyCkLePHqkPxNxPalsSLE_C4CbAaOiaGwNw\",\n        {\n          method: \"POST\",\n          body: JSON.stringify({\n            idToken: reduxidToken,\n            displayName: userRef.current?.value,\n            photoUrl: null,\n            returnSecureToken: false,\n          }),\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n      if (!data.ok) {\n        console.log(data);\n        let errorMessage = t(`UpdateProfileForm.error`);\n        throw new Error(errorMessage);\n      }\n      const json = await data.json();\n      console.log(json);\n      alert(t(`UpdateProfileForm.alert`));\n    } catch (err) {\n      alert(err);\n    }\n  };\n\n  console.log(reduxidToken);\n  return (\n    <section>\n      <Typography variant=\"h6\" color=\"white\">\n        {t(`UpdateProfileForm.header`)}\n      </Typography>\n      <Divider sx={{ backgroundColor: \"white\", marginTop: \"10px\" }} />\n      <Grid container spacing={4} style={{ marginTop: \"10px\" }}>\n        <Grid item xs={12} sm={3}>\n          {}\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            margin=\"dense\"\n            required\n            name=\"Username\"\n            sx={{\n              input: {\n                borderRadius: \"5px\",\n                border: \"1px solid white\",\n                color: \"white\",\n              },\n            }}\n            InputLabelProps={{\n              style: { color: \"#fff\" },\n            }}\n            label=\"Username\"\n            type=\"Username\"\n            fullWidth\n            inputRef={userRef}\n          />\n          <button style={{ marginTop: \"30px\" }} onClick={formHandler}>\n            {t(`SignInForm.button-submit`)}\n          </button>\n        </Grid>\n      </Grid>\n    </section>\n  );\n};\n\nexport default UpdateProfileForm;\n","import React from \"react\";\nimport ChangeUserNameForm from \"../components/UpdateProfileForm/UpdateProfileForm\";\nconst ChangeUserName = () => {\n  return <ChangeUserNameForm />;\n};\n\nexport default ChangeUserName;\n","import { Divider } from \"@mui/material\";\nimport { Grid } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nconst InitialPage = () => {\n  const { t } = useTranslation(\"main\");\n  return (\n    <section>\n      <Typography variant=\"h6\" color=\"white\">\n        Internet Logger v3\n      </Typography>\n      <Divider sx={{ backgroundColor: \"white\", marginTop: \"10px\" }} />\n      <Grid container style={{ marginTop: \"10px\" }}></Grid>\n      <Grid item xs={12} sm={12}>\n        <Typography variant=\"h6\" color=\"white\">\n          {t(\"InitialPage.header\")}\n        </Typography>\n      </Grid>\n    </section>\n  );\n};\n\nexport default InitialPage;\n","import React from \"react\";\nimport InitialPageForm from \"../components/InitialPage/InitialPage\";\nconst InitialPage = () => {\n  return <InitialPageForm />;\n};\n\nexport default InitialPage;\n","import React, { useEffect } from \"react\";\nimport { Routes, Route, Navigate } from \"react-router-dom\";\nimport \"./App.css\";\nimport Login from \"./pages/Login\";\nimport Layout from \"./components/Layout/Layout\";\nimport MessageLogEn from \"./pages/MessageLogEn\";\nimport SignIn from \"./pages/SignIn\";\nimport ChangePassword from \"./pages/ChangePassword\";\nimport ChangeUserName from \"./pages/ChangeUserName\";\nimport InitialPage from \"./pages/InitialPage\";\n// import { useSelector, useDispatch } from \"react-redux\";\nimport { useAppSelector, useAppDispatch } from \"./store/hooks\";\nimport { usersActions } from \"./store/userSlice\";\nimport { CssBaseline } from \"@material-ui/core\";\n\nfunction App() {\n  const reduxIsLoggedIn: boolean = useAppSelector((state) => state.isLoggedIn);\n  const reduxUser: string = useAppSelector((state) => state.user);\n  const dispatch = useAppDispatch();\n  const storedToken: string = localStorage.getItem(\"token\") as string;\n  const storedIsLoggedIn: boolean =\n    localStorage.getItem(\"isLoggedIn\")!?.toLowerCase() === \"true\";\n  const storedUser: string = localStorage.getItem(\"user\") as string;\n\n  useEffect(() => {\n    if (storedIsLoggedIn) {\n      dispatch(usersActions.updateIdToken(storedToken));\n      dispatch(usersActions.updateUser(storedUser));\n      dispatch(usersActions.updateIsLoggedIn(storedIsLoggedIn));\n    }\n  }, [storedToken, storedIsLoggedIn, storedUser, dispatch]);\n\n  return (\n    <>\n      <CssBaseline />\n      <Layout>\n        <Routes>\n          {reduxIsLoggedIn ? (\n            <Route path=\"*\" element={<Navigate to=\"/initialpage\" />} />\n          ) : (\n            <Route path=\"*\" element={<Navigate to=\"/login\" />} />\n          )}\n          {!reduxIsLoggedIn && (\n            <Route path=\"/login\" element={<Login></Login>} />\n          )}\n          {reduxIsLoggedIn && (\n            <Route path=\"/initialpage\" element={<InitialPage></InitialPage>} />\n          )}\n          {!reduxIsLoggedIn && (\n            <Route path=\"/signin\" element={<SignIn></SignIn>} />\n          )}\n          {reduxIsLoggedIn && (\n            <Route path=\"/msglog\" element={<MessageLogEn></MessageLogEn>} />\n          )}\n\n          {reduxIsLoggedIn && (\n            <Route\n              path=\"/updateusername\"\n              element={<ChangeUserName></ChangeUserName>}\n            />\n          )}\n          {reduxIsLoggedIn && (\n            <Route\n              path=\"/changepassword\"\n              element={<ChangePassword></ChangePassword>}\n            />\n          )}\n        </Routes>\n      </Layout>\n    </>\n  );\n}\n\nexport default App;\n","import i18n, { Resource } from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\n// 작성된 마크업을 불러옵니다. import 를 간소화하기 위해 *를 사용했습니다.\nimport * as en from \"./en\";\nimport * as kr from \"./kr\";\n\nconst resources: Resource = {\n  en: {\n    ...en, // 비구조화 할당을 통해 간소화했습니다.\n  },\n  kr: {\n    ...kr,\n  },\n} as const;\n\ni18n.use(initReactI18next).init({\n  resources,\n  lng: \"kr\", // 초기 설정 언어\n  fallbackLng: {\n    en: [\"en\"], // 한국어 불러오는 것이 실패했을 경우 영문을 써라 라는 말입니다.\n    default: [\"kr\"],\n  },\n  debug: true,\n  keySeparator: false,\n  interpolation: {\n    escapeValue: false,\n  },\n  react: {\n    useSuspense: false,\n  },\n});\n\nexport default i18n;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./store/userSlice\";\nimport { Provider } from \"react-redux\";\nimport { HashRouter } from \"react-router-dom\";\nimport \"./Locales\";\n\nReactDOM.render(\n  <HashRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}